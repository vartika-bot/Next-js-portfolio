/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.finalproject.druglifecycle;
//changes
import com.finalproject.backend.ClinicalResearcherReport;
import com.finalproject.backend.ClinicalResearcherReportDirectory;
import com.finalproject.backend.DevelopmentReport;
import com.finalproject.backend.DevelopmentReportDir;
import com.finalproject.backend.Employee;
import com.finalproject.backend.EmployeeDirectory;
import com.finalproject.backend.InspectionReportDirectory;
import com.finalproject.backend.InspectionReview;
import com.finalproject.backend.MedicalReport;
import com.finalproject.backend.MedicalReportDirectory;
import com.finalproject.backend.ResearchReport;
import com.finalproject.backend.ResearchReportDirectory;
import com.finalproject.SQLDB.backendDBConnection;
import com.finalproject.backend.AddAdvertising;
import com.finalproject.backend.AddAdvertisingDirectory;
import com.finalproject.backend.ConfigurationApp;
import com.finalproject.backend.Enterprise;
import com.finalproject.backend.EnterpriseDirectory;
import com.finalproject.backend.MailHandling;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;
import java.util.regex.*;
import jakarta.mail.MessagingException;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.table.TableRowSorter;
import javax.swing.*;
import java.awt.*;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.HashMap;

/**
 *
 * @author vartika
 */
public class drugLifeCycle extends javax.swing.JFrame {

    /**
     * Creates new form drugLifeCycle
     */
    
    public static String gender;
    public static String inspectiontype;
    public static String inspectionresult;
    public static String reportIDforView;
    EnterpriseDirectory entDir = new EnterpriseDirectory();
    //ConfigurationApp app = new ConfigurationApp();
    backendDBConnection conForSQL = new backendDBConnection();
    EmployeeDirectory empDir = new EmployeeDirectory();
    Connection conn = conForSQL.connectoDB();
    AddAdvertisingDirectory addDir = new AddAdvertisingDirectory();
    ResearchReportDirectory repDir = new ResearchReportDirectory();
    
    DevelopmentReportDir devRepDir = new DevelopmentReportDir();
    MedicalReportDirectory mediRepp = new MedicalReportDirectory();
    ClinicalResearcherReportDirectory clinicalresearchdir = new ClinicalResearcherReportDirectory();
    InspectionReportDirectory inspectRep = new InspectionReportDirectory();
    public static DefaultListModel listOfComposition = new DefaultListModel();
    public static DefaultListModel listOfDosage = new DefaultListModel();
    public static JPanel cardPrevious = null;
    public drugLifeCycle() {
        initComponents();
        populateEnterprise();
        organizationComboBoxR.setEnabled(false);
        roleComboBoxR.setEnabled(false);
        jTextArea2.setEnabled(false);
        ResearchReportPage1ResearchBy.setEnabled(false);
        usernameTextFieldR5.setEnabled(false);
        jTextArea9.setEnabled(false);
        conForSQL.connectoDB();
        //repDir = retrieveResearchReport();
        //repDir.setResearchReportdsDir(retrieveResearchReport());
        retrieveEmployee();
        retrieveResearchReport();
        retrieveDevelopmentReport();
        retrieveClinicalResearchReport();
        retrieveInspectionReport();
        retrieveMedicalReport();
        retrieveAdvertisingInfo();
     
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inspectionType = new javax.swing.ButtonGroup();
        inspectionResult = new javax.swing.ButtonGroup();
        Parent = new javax.swing.JPanel();
        Login = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        registerButton = new javax.swing.JButton();
        jLabel92 = new javax.swing.JLabel();
        passwordField1 = new javax.swing.JPasswordField();
        passwordLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        usernameTextField1 = new javax.swing.JTextField();
        usernameLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        Registration = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lastnameTextField1 = new javax.swing.JTextField();
        firstnameTextField1 = new javax.swing.JTextField();
        middlenameTextField1 = new javax.swing.JTextField();
        ageLabelR = new javax.swing.JLabel();
        ageTextField = new javax.swing.JTextField();
        DateofBirthChooser1 = new com.toedter.calendar.JDateChooser();
        dobLabelR = new javax.swing.JLabel();
        genderLabelR = new javax.swing.JLabel();
        maleRadioButton1 = new javax.swing.JRadioButton();
        femaleRadioButton1 = new javax.swing.JRadioButton();
        othersRadioButton1 = new javax.swing.JRadioButton();
        numberTextField1 = new javax.swing.JTextField();
        numberLabelR = new javax.swing.JLabel();
        mailIDLabelR = new javax.swing.JLabel();
        emailIDTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressTextArea1 = new javax.swing.JTextArea();
        addressLabelR = new javax.swing.JLabel();
        zipcodeTextField1 = new javax.swing.JTextField();
        zipCodeLabelR = new javax.swing.JLabel();
        nameLabelR = new javax.swing.JLabel();
        ageLabelR1 = new javax.swing.JLabel();
        ageLabelR2 = new javax.swing.JLabel();
        usernameTextFieldR = new javax.swing.JTextField();
        usernameLabelR = new javax.swing.JLabel();
        passwordLabelR = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        enterpriseComboBoxR = new javax.swing.JComboBox<>();
        enterpriseLabelR = new javax.swing.JLabel();
        organizationComboBoxR = new javax.swing.JComboBox<>();
        organizationLabelR = new javax.swing.JLabel();
        roleComboBoxR = new javax.swing.JComboBox<>();
        roleLabelR = new javax.swing.JLabel();
        submitButtonR = new javax.swing.JButton();
        cancelButtonR = new javax.swing.JButton();
        nameError = new javax.swing.JLabel();
        Title = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        Workspace = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        rightComponent = new javax.swing.JPanel();
        logoutButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        leftComponent = new javax.swing.JPanel();
        firstLoginEnterprise = new javax.swing.JPanel();
        firstLoginEnterpriseTitle = new javax.swing.JLabel();
        firstLoginEnterpriseName = new javax.swing.JLabel();
        firstLoginEnterpriseNameTextField = new javax.swing.JTextField();
        firstLoginEnterpriseType = new javax.swing.JLabel();
        firstLoginEnterpriseTypeComboBox = new javax.swing.JComboBox<>();
        addEnterpriseButton = new javax.swing.JButton();
        firstLoginOrganization = new javax.swing.JPanel();
        firsLognOrganzationNameLabel = new javax.swing.JLabel();
        firstLoginOrganizationNameTextField = new javax.swing.JTextField();
        firstLoginOrganizationAddButton = new javax.swing.JButton();
        firstLoginOrganizationRoleTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        firstLoginEnterpriseTitle1 = new javax.swing.JLabel();
        ResearchScientistHome = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ViewReport = new javax.swing.JButton();
        AddReport = new javax.swing.JButton();
        Title2 = new javax.swing.JLabel();
        ageLabelR4 = new javax.swing.JLabel();
        ageLabelR5 = new javax.swing.JLabel();
        ageLabelR6 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        ResearchLeadHome = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        viewReportResearchLead = new javax.swing.JButton();
        researchLeadApproval = new javax.swing.JButton();
        ageLabelR3 = new javax.swing.JLabel();
        Title1 = new javax.swing.JLabel();
        ageLabelR7 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        ageLabelR8 = new javax.swing.JLabel();
        ResearchLeadApproval = new javax.swing.JPanel();
        RepID = new javax.swing.JLabel();
        RepBy = new javax.swing.JLabel();
        RepName = new javax.swing.JLabel();
        RepTarget = new javax.swing.JLabel();
        RepNotes = new javax.swing.JLabel();
        RepPushToDev = new javax.swing.JLabel();
        IDleadAssign = new javax.swing.JLabel();
        NameleadAssign = new javax.swing.JLabel();
        targetleadAssign = new javax.swing.JLabel();
        dateleadAssign = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jComboBox3 = new javax.swing.JComboBox<>();
        AssignToDevDecsion = new javax.swing.JButton();
        CancelAssigning = new javax.swing.JButton();
        RepPushToDev2 = new javax.swing.JLabel();
        RepPushToDev3 = new javax.swing.JLabel();
        ResearchScientistReport = new javax.swing.JTabbedPane();
        page1 = new javax.swing.JPanel();
        TabbedPaneNext1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        ResearchReportPage1Name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ResearchReportPage1DiseaseTarget = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        ResearchReportPage1ResearchBy = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        firstLoginEnterpriseTitle2 = new javax.swing.JLabel();
        ResearchReportCancelReport2 = new javax.swing.JButton();
        page2 = new javax.swing.JPanel();
        TabbedPaneNext2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        addChemicalComposition = new javax.swing.JButton();
        ResearchScientistReportPage2ChemicalTextField = new javax.swing.JTextField();
        ResearchScientistReportPage2Quantity = new javax.swing.JTextField();
        deleteChemicalComposition = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        firstLoginEnterpriseTitle3 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        ResearchReportCancelReport1 = new javax.swing.JButton();
        page3 = new javax.swing.JPanel();
        ResearchReportSubmitReport = new javax.swing.JButton();
        ResearchReportCancelReport = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        firstLoginEnterpriseTitle4 = new javax.swing.JLabel();
        ManufacturingAnalystHome = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Title3 = new javax.swing.JLabel();
        ageLabelR9 = new javax.swing.JLabel();
        ageLabelR10 = new javax.swing.JLabel();
        ageLabelR11 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        AddManufacturingDetails = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane12 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        jTextField3 = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        ageLabelR12 = new javax.swing.JLabel();
        Title4 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        ResearchScientistViewReport = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        DiscoveryDevelopment = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        viewReportBackButton = new javax.swing.JButton();
        jLabel59 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jScrollPane25 = new javax.swing.JScrollPane();
        jTextArea10 = new javax.swing.JTextArea();
        jScrollPane26 = new javax.swing.JScrollPane();
        jTextArea11 = new javax.swing.JTextArea();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTextField19 = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jLabel60 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        ClinicalResearchers = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        ViewReport2 = new javax.swing.JButton();
        jTextField14 = new javax.swing.JTextField();
        ageLabelR13 = new javax.swing.JLabel();
        ageLabelR14 = new javax.swing.JLabel();
        ageLabelR15 = new javax.swing.JLabel();
        Title5 = new javax.swing.JLabel();
        GLPOfficersHome = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        ViewReport1 = new javax.swing.JButton();
        createTrail = new javax.swing.JButton();
        ageLabelR16 = new javax.swing.JLabel();
        ageLabelR17 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        ageLabelR18 = new javax.swing.JLabel();
        Title6 = new javax.swing.JLabel();
        CreateTrail = new javax.swing.JPanel();
        jLabel64 = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();
        usernameLabelR1 = new javax.swing.JLabel();
        usernameTextFieldR1 = new javax.swing.JTextField();
        usernameLabelR2 = new javax.swing.JLabel();
        usernameLabelR3 = new javax.swing.JLabel();
        usernameLabelR4 = new javax.swing.JLabel();
        usernameLabelR5 = new javax.swing.JLabel();
        usernameLabelR7 = new javax.swing.JLabel();
        usernameTextFieldR5 = new javax.swing.JTextField();
        usernameLabelR8 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jScrollPane19 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jComboBox5 = new javax.swing.JComboBox<>();
        createTrail2 = new javax.swing.JButton();
        jScrollPane29 = new javax.swing.JScrollPane();
        jList7 = new javax.swing.JList<>();
        RegulatoryHealthManager = new javax.swing.JPanel();
        jScrollPane20 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        ViewReport3 = new javax.swing.JButton();
        AddReport1 = new javax.swing.JButton();
        ageLabelR19 = new javax.swing.JLabel();
        ageLabelR20 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        ageLabelR21 = new javax.swing.JLabel();
        Title7 = new javax.swing.JLabel();
        MedicalOfficerHome = new javax.swing.JPanel();
        jScrollPane21 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        ViewReport4 = new javax.swing.JButton();
        AddReport2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        ageLabelR22 = new javax.swing.JLabel();
        ageLabelR23 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        ageLabelR24 = new javax.swing.JLabel();
        Title8 = new javax.swing.JLabel();
        AddToxicologyReport = new javax.swing.JPanel();
        jComboBox6 = new javax.swing.JComboBox<>();
        AssignToDevDecsion1 = new javax.swing.JButton();
        CancelAssigning1 = new javax.swing.JButton();
        jScrollPane24 = new javax.swing.JScrollPane();
        jList8 = new javax.swing.JList<>();
        jLabel71 = new javax.swing.JLabel();
        jScrollPane22 = new javax.swing.JScrollPane();
        jTextArea8 = new javax.swing.JTextArea();
        jLabel73 = new javax.swing.JLabel();
        jScrollPane23 = new javax.swing.JScrollPane();
        jTextArea9 = new javax.swing.JTextArea();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        Title9 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        AdvertisingSpecialist = new javax.swing.JPanel();
        AssignToDevDecsion2 = new javax.swing.JButton();
        jScrollPane33 = new javax.swing.JScrollPane();
        AddSpecialistTable = new javax.swing.JTable();
        ViewReport5 = new javax.swing.JButton();
        ViewReport6 = new javax.swing.JButton();
        ageLabelR25 = new javax.swing.JLabel();
        ageLabelR26 = new javax.swing.JLabel();
        Title10 = new javax.swing.JLabel();
        ageLabelR27 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        AddAdvertising = new javax.swing.JPanel();
        AssignToDevDecsion3 = new javax.swing.JButton();
        CancelAssigning3 = new javax.swing.JButton();
        jLabel83 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jScrollPane27 = new javax.swing.JScrollPane();
        jTextArea12 = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        SafetyInspectorOfficer = new javax.swing.JPanel();
        AssignToDevDecsion5 = new javax.swing.JButton();
        jScrollPane34 = new javax.swing.JScrollPane();
        jTable9 = new javax.swing.JTable();
        ViewReport7 = new javax.swing.JButton();
        ViewReport8 = new javax.swing.JButton();
        ageLabelR28 = new javax.swing.JLabel();
        ageLabelR29 = new javax.swing.JLabel();
        Title11 = new javax.swing.JLabel();
        ageLabelR30 = new javax.swing.JLabel();
        jTextField27 = new javax.swing.JTextField();
        InspectionVisit = new javax.swing.JPanel();
        AssignToDevDecsion4 = new javax.swing.JButton();
        CancelAssigning4 = new javax.swing.JButton();
        jLabel84 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jScrollPane28 = new javax.swing.JScrollPane();
        jTextArea13 = new javax.swing.JTextArea();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel94 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(245, 245, 245));
        setLocation(new java.awt.Point(160, 100));

        Parent.setLayout(new java.awt.CardLayout());

        Login.setBackground(new java.awt.Color(245, 245, 245));
        Login.setMaximumSize(new java.awt.Dimension(1440, 2147483647));
        Login.setMinimumSize(new java.awt.Dimension(1300, 940));
        Login.setPreferredSize(new java.awt.Dimension(1600, 900));
        Login.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(null);

        registerButton.setBackground(new java.awt.Color(245, 245, 245));
        registerButton.setText("Configure Users");
        registerButton.setBorder(null);
        registerButton.setBorderPainted(false);
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });
        jPanel7.add(registerButton);
        registerButton.setBounds(310, 540, 160, 40);

        jLabel92.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel92.setForeground(new java.awt.Color(102, 102, 102));
        jLabel92.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel92.setText("Are you an Admin?");
        jPanel7.add(jLabel92);
        jLabel92.setBounds(270, 510, 220, 30);
        jPanel7.add(passwordField1);
        passwordField1.setBounds(280, 330, 220, 40);

        passwordLabel.setText("Password");
        jPanel7.add(passwordLabel);
        passwordLabel.setBounds(360, 310, 58, 17);

        loginButton.setBackground(new java.awt.Color(0, 102, 102));
        loginButton.setForeground(new java.awt.Color(255, 255, 255));
        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        jPanel7.add(loginButton);
        loginButton.setBounds(280, 400, 220, 40);

        jLabel96.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel96.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel96.setText("ReguPharm");
        jPanel7.add(jLabel96);
        jLabel96.setBounds(270, 80, 220, 60);

        jLabel97.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel97.setForeground(new java.awt.Color(102, 102, 102));
        jLabel97.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel97.setText("Drug Management Application");
        jPanel7.add(jLabel97);
        jLabel97.setBounds(270, 130, 220, 30);

        usernameTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextField1ActionPerformed(evt);
            }
        });
        jPanel7.add(usernameTextField1);
        usernameTextField1.setBounds(280, 250, 220, 40);

        usernameLabel.setText("Username");
        jPanel7.add(usernameLabel);
        usernameLabel.setBounds(350, 230, 59, 17);

        Login.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 840, 610));
        Login.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 640, 630, 20));

        Parent.add(Login, "card2");

        Registration.setBackground(new java.awt.Color(245, 245, 245));
        Registration.setMaximumSize(new java.awt.Dimension(1144, 781));
        Registration.setMinimumSize(new java.awt.Dimension(1144, 781));
        Registration.setPreferredSize(new java.awt.Dimension(1690, 900));
        Registration.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        lastnameTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastnameTextField1ActionPerformed(evt);
            }
        });
        lastnameTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lastnameTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(lastnameTextField1);
        lastnameTextField1.setBounds(510, 140, 170, 30);

        firstnameTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstnameTextField1ActionPerformed(evt);
            }
        });
        firstnameTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                firstnameTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(firstnameTextField1);
        firstnameTextField1.setBounds(150, 140, 170, 30);

        middlenameTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                middlenameTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(middlenameTextField1);
        middlenameTextField1.setBounds(330, 140, 170, 30);

        ageLabelR.setText("Age:");
        jPanel1.add(ageLabelR);
        ageLabelR.setBounds(380, 270, 50, 20);

        ageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageTextFieldActionPerformed(evt);
            }
        });
        jPanel1.add(ageTextField);
        ageTextField.setBounds(480, 270, 200, 30);

        DateofBirthChooser1.setBackground(new java.awt.Color(245, 245, 245));
        jPanel1.add(DateofBirthChooser1);
        DateofBirthChooser1.setBounds(150, 310, 170, 30);

        dobLabelR.setText("DOB:");
        jPanel1.add(dobLabelR);
        dobLabelR.setBounds(70, 310, 32, 24);

        genderLabelR.setText("Gender:");
        jPanel1.add(genderLabelR);
        genderLabelR.setBounds(380, 320, 70, 17);

        maleRadioButton1.setText("Male");
        maleRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleRadioButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(maleRadioButton1);
        maleRadioButton1.setBounds(480, 320, 60, 20);

        femaleRadioButton1.setText("Female");
        femaleRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleRadioButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(femaleRadioButton1);
        femaleRadioButton1.setBounds(540, 320, 65, 21);

        othersRadioButton1.setText("Others");
        othersRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                othersRadioButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(othersRadioButton1);
        othersRadioButton1.setBounds(620, 320, 62, 21);

        numberTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberTextField1ActionPerformed(evt);
            }
        });
        numberTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numberTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(numberTextField1);
        numberTextField1.setBounds(480, 230, 200, 30);

        numberLabelR.setText("Phone:");
        jPanel1.add(numberLabelR);
        numberLabelR.setBounds(380, 230, 73, 24);

        mailIDLabelR.setText("Email ID:");
        jPanel1.add(mailIDLabelR);
        mailIDLabelR.setBounds(70, 230, 83, 20);

        emailIDTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailIDTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(emailIDTextField1);
        emailIDTextField1.setBounds(150, 230, 170, 30);

        addressTextArea1.setColumns(20);
        addressTextArea1.setRows(5);
        jScrollPane1.setViewportView(addressTextArea1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(150, 180, 530, 40);

        addressLabelR.setText("Address:");
        jPanel1.add(addressLabelR);
        addressLabelR.setBounds(70, 180, 73, 17);

        zipcodeTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                zipcodeTextField1KeyReleased(evt);
            }
        });
        jPanel1.add(zipcodeTextField1);
        zipcodeTextField1.setBounds(150, 270, 170, 30);

        zipCodeLabelR.setText("Zip Code:");
        jPanel1.add(zipCodeLabelR);
        zipCodeLabelR.setBounds(70, 270, 73, 24);

        nameLabelR.setText("Name:");
        jPanel1.add(nameLabelR);
        nameLabelR.setBounds(70, 140, 83, 30);

        ageLabelR1.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        ageLabelR1.setForeground(new java.awt.Color(102, 102, 102));
        ageLabelR1.setText("ROLE DETAILS");
        jPanel1.add(ageLabelR1);
        ageLabelR1.setBounds(70, 380, 100, 20);

        ageLabelR2.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        ageLabelR2.setForeground(new java.awt.Color(102, 102, 102));
        ageLabelR2.setText("BASIC DETAILS");
        jPanel1.add(ageLabelR2);
        ageLabelR2.setBounds(70, 100, 100, 20);
        jPanel1.add(usernameTextFieldR);
        usernameTextFieldR.setBounds(150, 420, 170, 30);

        usernameLabelR.setText("Username:");
        jPanel1.add(usernameLabelR);
        usernameLabelR.setBounds(70, 420, 83, 30);

        passwordLabelR.setText("Password:");
        jPanel1.add(passwordLabelR);
        passwordLabelR.setBounds(380, 420, 70, 30);
        jPanel1.add(jPasswordField1);
        jPasswordField1.setBounds(480, 420, 200, 30);

        enterpriseComboBoxR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "New enterprise" }));
        enterpriseComboBoxR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseComboBoxRActionPerformed(evt);
            }
        });
        jPanel1.add(enterpriseComboBoxR);
        enterpriseComboBoxR.setBounds(150, 460, 170, 30);

        enterpriseLabelR.setText("Enterprise:");
        jPanel1.add(enterpriseLabelR);
        enterpriseLabelR.setBounds(70, 460, 100, 30);

        organizationComboBoxR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "New organization", "Research", "Development", "GLP Regulators", "Clinical Researcher", "Review", "Approval", "Manufacturer inspections", "Drug advertising" }));
        organizationComboBoxR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationComboBoxRActionPerformed(evt);
            }
        });
        jPanel1.add(organizationComboBoxR);
        organizationComboBoxR.setBounds(480, 460, 200, 30);

        organizationLabelR.setText("Organization:");
        jPanel1.add(organizationLabelR);
        organizationLabelR.setBounds(380, 460, 90, 30);

        roleComboBoxR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "New role", "Research Scientist", "Research lead", "CTEP medical officer", "Manufacturing Analyst", "GLP Officer", "Clinical researcher", "Medical Officer", "Regulatory Health Manager", "Advertising Specialist", "Safety Inspector" }));
        roleComboBoxR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleComboBoxRActionPerformed(evt);
            }
        });
        jPanel1.add(roleComboBoxR);
        roleComboBoxR.setBounds(150, 500, 170, 30);

        roleLabelR.setText("Role:");
        jPanel1.add(roleLabelR);
        roleLabelR.setBounds(70, 500, 94, 30);

        submitButtonR.setBackground(new java.awt.Color(0, 102, 102));
        submitButtonR.setForeground(new java.awt.Color(255, 255, 255));
        submitButtonR.setText("Register User");
        submitButtonR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonRActionPerformed(evt);
            }
        });
        jPanel1.add(submitButtonR);
        submitButtonR.setBounds(560, 590, 120, 30);

        cancelButtonR.setText("Cancel");
        cancelButtonR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonRActionPerformed(evt);
            }
        });
        jPanel1.add(cancelButtonR);
        cancelButtonR.setBounds(460, 590, 90, 30);

        nameError.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        nameError.setForeground(new java.awt.Color(255, 0, 51));
        jPanel1.add(nameError);
        nameError.setBounds(70, 590, 370, 30);

        Title.setFont(new java.awt.Font("Helvetica Neue", 1, 28)); // NOI18N
        Title.setText("Register User");
        jPanel1.add(Title);
        Title.setBounds(70, 40, 220, 35);
        jPanel1.add(jSeparator7);
        jSeparator7.setBounds(70, 560, 610, 30);

        Registration.add(jPanel1);
        jPanel1.setBounds(200, 30, 750, 660);
        Registration.add(jSeparator6);
        jSeparator6.setBounds(200, 690, 750, 30);

        Parent.add(Registration, "card3");

        Workspace.setPreferredSize(new java.awt.Dimension(1600, 900));

        jSplitPane1.setDividerSize(0);

        rightComponent.setBackground(new java.awt.Color(0, 102, 102));
        rightComponent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        rightComponent.setAlignmentY(0.8F);
        rightComponent.setMaximumSize(new java.awt.Dimension(190, 760));
        rightComponent.setMinimumSize(new java.awt.Dimension(190, 760));
        rightComponent.setLayout(null);

        logoutButton1.setBackground(new java.awt.Color(0, 0, 0));
        logoutButton1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        logoutButton1.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton1.setText("Logout");
        logoutButton1.setBorder(null);
        logoutButton1.setBorderPainted(false);
        logoutButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButton1ActionPerformed(evt);
            }
        });
        rightComponent.add(logoutButton1);
        logoutButton1.setBounds(10, 660, 170, 40);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ReguPharm");
        rightComponent.add(jLabel1);
        jLabel1.setBounds(10, 50, 190, 30);

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("Drug Management Application");
        rightComponent.add(jLabel3);
        jLabel3.setBounds(10, 80, 162, 15);

        jLabel93.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabel93.setForeground(new java.awt.Color(153, 153, 153));
        jLabel93.setText("Designed and Developed at");
        rightComponent.add(jLabel93);
        jLabel93.setBounds(10, 580, 150, 20);
        rightComponent.add(jSeparator4);
        jSeparator4.setBounds(10, 630, 170, 20);

        jSplitPane1.setLeftComponent(rightComponent);

        leftComponent.setBackground(new java.awt.Color(255, 255, 255));
        leftComponent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        leftComponent.setAlignmentY(0.8F);
        leftComponent.setMaximumSize(new java.awt.Dimension(940, 760));
        leftComponent.setMinimumSize(new java.awt.Dimension(940, 760));
        leftComponent.setPreferredSize(new java.awt.Dimension(940, 760));
        leftComponent.setLayout(new java.awt.CardLayout());

        firstLoginEnterprise.setBackground(new java.awt.Color(255, 255, 255));
        firstLoginEnterprise.setLayout(null);

        firstLoginEnterpriseTitle.setBackground(new java.awt.Color(0, 0, 0));
        firstLoginEnterpriseTitle.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        firstLoginEnterpriseTitle.setText("Welcome to Enterprise creation");
        firstLoginEnterprise.add(firstLoginEnterpriseTitle);
        firstLoginEnterpriseTitle.setBounds(40, 50, 387, 30);

        firstLoginEnterpriseName.setText("Enterprise name:");
        firstLoginEnterprise.add(firstLoginEnterpriseName);
        firstLoginEnterpriseName.setBounds(40, 110, 99, 17);

        firstLoginEnterpriseNameTextField.setToolTipText("");
        firstLoginEnterprise.add(firstLoginEnterpriseNameTextField);
        firstLoginEnterpriseNameTextField.setBounds(170, 110, 200, 23);

        firstLoginEnterpriseType.setText("Enterprise type:");
        firstLoginEnterprise.add(firstLoginEnterpriseType);
        firstLoginEnterpriseType.setBounds(40, 160, 112, 17);

        firstLoginEnterpriseTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not selected", "Research institute", "Mass manufacturers", "Chemical suppliers", "Pre/Post clinical trials handling", "Food and drug administration" }));
        firstLoginEnterprise.add(firstLoginEnterpriseTypeComboBox);
        firstLoginEnterpriseTypeComboBox.setBounds(170, 160, 200, 23);

        addEnterpriseButton.setBackground(new java.awt.Color(0, 102, 153));
        addEnterpriseButton.setForeground(new java.awt.Color(255, 255, 255));
        addEnterpriseButton.setText("Add enterprise");
        addEnterpriseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEnterpriseButtonActionPerformed(evt);
            }
        });
        firstLoginEnterprise.add(addEnterpriseButton);
        addEnterpriseButton.setBounds(250, 320, 116, 30);

        leftComponent.add(firstLoginEnterprise, "card2");

        firstLoginOrganization.setBackground(new java.awt.Color(255, 255, 255));
        firstLoginOrganization.setPreferredSize(new java.awt.Dimension(1219, 600));
        firstLoginOrganization.setLayout(null);

        firsLognOrganzationNameLabel.setText("Organization name:");
        firsLognOrganzationNameLabel.setToolTipText("");
        firstLoginOrganization.add(firsLognOrganzationNameLabel);
        firsLognOrganzationNameLabel.setBounds(40, 110, 112, 17);

        firstLoginOrganizationNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstLoginOrganizationNameTextFieldActionPerformed(evt);
            }
        });
        firstLoginOrganization.add(firstLoginOrganizationNameTextField);
        firstLoginOrganizationNameTextField.setBounds(170, 110, 290, 23);

        firstLoginOrganizationAddButton.setBackground(new java.awt.Color(0, 102, 153));
        firstLoginOrganizationAddButton.setForeground(new java.awt.Color(255, 255, 255));
        firstLoginOrganizationAddButton.setText("Add");
        firstLoginOrganizationAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstLoginOrganizationAddButtonActionPerformed(evt);
            }
        });
        firstLoginOrganization.add(firstLoginOrganizationAddButton);
        firstLoginOrganizationAddButton.setBounds(380, 200, 80, 30);

        firstLoginOrganizationRoleTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstLoginOrganizationRoleTextField1ActionPerformed(evt);
            }
        });
        firstLoginOrganization.add(firstLoginOrganizationRoleTextField1);
        firstLoginOrganizationRoleTextField1.setBounds(170, 150, 290, 23);

        jLabel2.setText("My Role:");
        firstLoginOrganization.add(jLabel2);
        jLabel2.setBounds(40, 150, 112, 20);

        firstLoginEnterpriseTitle1.setBackground(new java.awt.Color(0, 0, 0));
        firstLoginEnterpriseTitle1.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        firstLoginEnterpriseTitle1.setText("Welcome to Organization Creation");
        firstLoginOrganization.add(firstLoginEnterpriseTitle1);
        firstLoginEnterpriseTitle1.setBounds(40, 50, 440, 30);

        leftComponent.add(firstLoginOrganization, "card3");

        ResearchScientistHome.setBackground(new java.awt.Color(255, 255, 255));
        ResearchScientistHome.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Report ID", "Drug name", "Date", "Disease target", "Report to"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        ResearchScientistHome.add(jScrollPane2);
        jScrollPane2.setBounds(40, 164, 839, 380);

        ViewReport.setText("View Report");
        ViewReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewReportActionPerformed(evt);
            }
        });
        ResearchScientistHome.add(ViewReport);
        ViewReport.setBounds(630, 560, 101, 35);

        AddReport.setBackground(new java.awt.Color(0, 102, 204));
        AddReport.setForeground(new java.awt.Color(255, 255, 255));
        AddReport.setText("Add New Report");
        AddReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddReportActionPerformed(evt);
            }
        });
        ResearchScientistHome.add(AddReport);
        AddReport.setBounds(750, 560, 127, 35);

        Title2.setFont(new java.awt.Font("Helvetica Neue", 1, 28)); // NOI18N
        Title2.setText("Research Scientist");
        ResearchScientistHome.add(Title2);
        Title2.setBounds(40, 40, 251, 35);

        ageLabelR4.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        ageLabelR4.setForeground(new java.awt.Color(102, 102, 102));
        ageLabelR4.setText("As a research scientist, you will initiate reports and assign leads to them to continue the research work.");
        ResearchScientistHome.add(ageLabelR4);
        ageLabelR4.setBounds(40, 81, 656, 18);

        ageLabelR5.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        ageLabelR5.setText("All Reports");
        ResearchScientistHome.add(ageLabelR5);
        ageLabelR5.setBounds(40, 130, 110, 18);

        ageLabelR6.setText("Search");
        ResearchScientistHome.add(ageLabelR6);
        ageLabelR6.setBounds(680, 120, 40, 30);

        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });
        jTextField9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField9KeyReleased(evt);
            }
        });
        ResearchScientistHome.add(jTextField9);
        jTextField9.setBounds(730, 120, 150, 30);

        leftComponent.add(ResearchScientistHome, "card4");

        ResearchLeadHome.setBackground(new java.awt.Color(255, 255, 255));
        ResearchLeadHome.setMinimumSize(new java.awt.Dimension(1600, 900));
        ResearchLeadHome.setPreferredSize(new java.awt.Dimension(1800, 900));
        ResearchLeadHome.setLayout(null);

        jTable2.setBackground(new java.awt.Color(245, 245, 245));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Report ID", "Drug Name", "Date", "Disease Target", "Report To"
            }
        ));
        jScrollPane6.setViewportView(jTable2);

        ResearchLeadHome.add(jScrollPane6);
        jScrollPane6.setBounds(40, 161, 870, 370);

        viewReportResearchLead.setText("View Report");
        viewReportResearchLead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewReportResearchLeadActionPerformed(evt);
            }
        });
        ResearchLeadHome.add(viewReportResearchLead);
        viewReportResearchLead.setBounds(660, 550, 120, 30);

        researchLeadApproval.setBackground(new java.awt.Color(0, 102, 153));
        researchLeadApproval.setForeground(new java.awt.Color(255, 255, 255));
        researchLeadApproval.setText("Assign to");
        researchLeadApproval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                researchLeadApprovalActionPerformed(evt);
            }
        });
        ResearchLeadHome.add(researchLeadApproval);
        researchLeadApproval.setBounds(790, 550, 120, 30);

        ageLabelR3.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        ageLabelR3.setForeground(new java.awt.Color(102, 102, 102));
        ageLabelR3.setText("As a research lead, you will continue on field research on these report and update them. ");
        ResearchLeadHome.add(ageLabelR3);
        ageLabelR3.setBounds(40, 80, 566, 18);

        Title1.setFont(new java.awt.Font("Helvetica Neue", 1, 28)); // NOI18N
        Title1.setText("Research Lead");
        ResearchLeadHome.add(Title1);
        Title1.setBounds(40, 40, 201, 35);

        ageLabelR7.setText("Search");
        ResearchLeadHome.add(ageLabelR7);
        ageLabelR7.setBounds(710, 120, 40, 30);

        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });
        jTextField10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField10KeyReleased(evt);
            }
        });
        ResearchLeadHome.add(jTextField10);
        jTextField10.setBounds(760, 120, 150, 30);

        ageLabelR8.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        ageLabelR8.setText("All Reports");
        ResearchLeadHome.add(ageLabelR8);
        ageLabelR8.setBounds(40, 130, 110, 18);

        leftComponent.add(ResearchLeadHome, "card5");

        ResearchLeadApproval.setBackground(new java.awt.Color(255, 255, 255));
        ResearchLeadApproval.setPreferredSize(new java.awt.Dimension(800, 900));
        ResearchLeadApproval.setLayout(null);

        RepID.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        RepID.setText("Report ID:");
        ResearchLeadApproval.add(RepID);
        RepID.setBounds(30, 150, 160, 19);

        RepBy.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        RepBy.setText("Drug name:");
        ResearchLeadApproval.add(RepBy);
        RepBy.setBounds(30, 190, 160, 19);

        RepName.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        RepName.setText("Disease target");
        ResearchLeadApproval.add(RepName);
        RepName.setBounds(30, 230, 160, 19);

        RepTarget.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        RepTarget.setText("Date:");
        ResearchLeadApproval.add(RepTarget);
        RepTarget.setBounds(30, 270, 160, 19);

        RepNotes.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        RepNotes.setText("Notes:");
        ResearchLeadApproval.add(RepNotes);
        RepNotes.setBounds(30, 400, 160, 19);

        RepPushToDev.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        RepPushToDev.setForeground(new java.awt.Color(102, 102, 102));
        RepPushToDev.setText("This request is created by the discovery team to the development team to start the development of the drug.");
        ResearchLeadApproval.add(RepPushToDev);
        RepPushToDev.setBounds(30, 70, 780, 30);

        IDleadAssign.setText("leadassign");
        ResearchLeadApproval.add(IDleadAssign);
        IDleadAssign.setBounds(220, 150, 210, 17);

        NameleadAssign.setText("name");
        ResearchLeadApproval.add(NameleadAssign);
        NameleadAssign.setBounds(220, 190, 196, 17);

        targetleadAssign.setText("targetleasassign");
        ResearchLeadApproval.add(targetleadAssign);
        targetleadAssign.setBounds(220, 230, 196, 17);

        dateleadAssign.setText("dateleasassign");
        ResearchLeadApproval.add(dateleadAssign);
        dateleadAssign.setBounds(220, 270, 196, 17);

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane10.setViewportView(jTextArea4);

        ResearchLeadApproval.add(jScrollPane10);
        jScrollPane10.setBounds(220, 390, 610, 91);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        ResearchLeadApproval.add(jComboBox3);
        jComboBox3.setBounds(220, 340, 234, 30);

        AssignToDevDecsion.setBackground(new java.awt.Color(0, 102, 153));
        AssignToDevDecsion.setForeground(new java.awt.Color(255, 255, 255));
        AssignToDevDecsion.setText("Approve");
        AssignToDevDecsion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignToDevDecsionActionPerformed(evt);
            }
        });
        ResearchLeadApproval.add(AssignToDevDecsion);
        AssignToDevDecsion.setBounds(739, 510, 90, 30);

        CancelAssigning.setText("Cancel");
        CancelAssigning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelAssigningActionPerformed(evt);
            }
        });
        ResearchLeadApproval.add(CancelAssigning);
        CancelAssigning.setBounds(650, 510, 80, 30);

        RepPushToDev2.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        RepPushToDev2.setText("Assign to developer:");
        ResearchLeadApproval.add(RepPushToDev2);
        RepPushToDev2.setBounds(30, 340, 160, 30);

        RepPushToDev3.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        RepPushToDev3.setText("Development Push Request");
        ResearchLeadApproval.add(RepPushToDev3);
        RepPushToDev3.setBounds(30, 30, 370, 50);

        leftComponent.add(ResearchLeadApproval, "card6");

        ResearchScientistReport.setBackground(new java.awt.Color(255, 255, 255));
        ResearchScientistReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResearchScientistReportMouseClicked(evt);
            }
        });

        page1.setBackground(new java.awt.Color(255, 255, 255));
        page1.setMaximumSize(new java.awt.Dimension(1129, 760));
        page1.setPreferredSize(new java.awt.Dimension(1129, 760));
        page1.setLayout(null);

        TabbedPaneNext1.setBackground(new java.awt.Color(0, 102, 153));
        TabbedPaneNext1.setForeground(new java.awt.Color(255, 255, 255));
        TabbedPaneNext1.setText("Next");
        TabbedPaneNext1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TabbedPaneNext1ActionPerformed(evt);
            }
        });
        page1.add(TabbedPaneNext1);
        TabbedPaneNext1.setBounds(350, 480, 90, 30);

        jLabel4.setText("Drug Name:");
        page1.add(jLabel4);
        jLabel4.setBounds(30, 130, 99, 30);
        page1.add(ResearchReportPage1Name);
        ResearchReportPage1Name.setBounds(150, 130, 291, 30);

        jLabel5.setText("Disease target:");
        page1.add(jLabel5);
        jLabel5.setBounds(30, 180, 99, 30);
        page1.add(ResearchReportPage1DiseaseTarget);
        ResearchReportPage1DiseaseTarget.setBounds(150, 180, 291, 30);

        jLabel6.setText("Date:");
        page1.add(jLabel6);
        jLabel6.setBounds(30, 230, 99, 30);

        jLabel7.setText("Notes:");
        page1.add(jLabel7);
        jLabel7.setBounds(30, 280, 99, 17);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        page1.add(jScrollPane3);
        jScrollPane3.setBounds(150, 280, 291, 123);

        jLabel8.setText("Research lead:");
        page1.add(jLabel8);
        jLabel8.setBounds(30, 420, 107, 30);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        page1.add(jComboBox1);
        jComboBox1.setBounds(150, 420, 291, 30);

        jLabel9.setText("Research by:");
        page1.add(jLabel9);
        jLabel9.setBounds(30, 80, 78, 30);

        ResearchReportPage1ResearchBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResearchReportPage1ResearchByActionPerformed(evt);
            }
        });
        page1.add(ResearchReportPage1ResearchBy);
        ResearchReportPage1ResearchBy.setBounds(150, 80, 291, 30);
        page1.add(jDateChooser1);
        jDateChooser1.setBounds(150, 230, 291, 30);

        firstLoginEnterpriseTitle2.setBackground(new java.awt.Color(0, 0, 0));
        firstLoginEnterpriseTitle2.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        firstLoginEnterpriseTitle2.setText("Drug Details");
        page1.add(firstLoginEnterpriseTitle2);
        firstLoginEnterpriseTitle2.setBounds(30, 30, 157, 30);

        ResearchReportCancelReport2.setBackground(new java.awt.Color(245, 245, 245));
        ResearchReportCancelReport2.setText("Cancel");
        ResearchReportCancelReport2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResearchReportCancelReport2ActionPerformed(evt);
            }
        });
        page1.add(ResearchReportCancelReport2);
        ResearchReportCancelReport2.setBounds(260, 480, 80, 30);

        ResearchScientistReport.addTab("Details", page1);

        page2.setBackground(new java.awt.Color(255, 255, 255));
        page2.setLayout(null);

        TabbedPaneNext2.setBackground(new java.awt.Color(0, 102, 153));
        TabbedPaneNext2.setForeground(new java.awt.Color(255, 255, 255));
        TabbedPaneNext2.setText("Next");
        TabbedPaneNext2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TabbedPaneNext2ActionPerformed(evt);
            }
        });
        page2.add(TabbedPaneNext2);
        TabbedPaneNext2.setBounds(462, 400, 90, 30);

        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Select added componds to delete from list");
        page2.add(jLabel10);
        jLabel10.setBounds(30, 330, 260, 17);

        addChemicalComposition.setText("Add");
        addChemicalComposition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addChemicalCompositionActionPerformed(evt);
            }
        });
        page2.add(addChemicalComposition);
        addChemicalComposition.setBounds(470, 80, 80, 30);
        page2.add(ResearchScientistReportPage2ChemicalTextField);
        ResearchScientistReportPage2ChemicalTextField.setBounds(170, 80, 120, 30);

        ResearchScientistReportPage2Quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResearchScientistReportPage2QuantityActionPerformed(evt);
            }
        });
        page2.add(ResearchScientistReportPage2Quantity);
        ResearchScientistReportPage2Quantity.setBounds(300, 80, 80, 30);

        deleteChemicalComposition.setText("Delete");
        deleteChemicalComposition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteChemicalCompositionActionPerformed(evt);
            }
        });
        page2.add(deleteChemicalComposition);
        deleteChemicalComposition.setBounds(480, 330, 72, 23);

        jLabel11.setText("gram");
        page2.add(jLabel11);
        jLabel11.setBounds(390, 80, 39, 30);

        jScrollPane7.setViewportView(jList1);

        page2.add(jScrollPane7);
        jScrollPane7.setBounds(30, 160, 520, 165);

        firstLoginEnterpriseTitle3.setBackground(new java.awt.Color(0, 0, 0));
        firstLoginEnterpriseTitle3.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        firstLoginEnterpriseTitle3.setText("Drug Composition");
        page2.add(firstLoginEnterpriseTitle3);
        firstLoginEnterpriseTitle3.setBounds(30, 30, 240, 30);

        jLabel27.setText("Composition:");
        page2.add(jLabel27);
        jLabel27.setBounds(30, 77, 77, 30);

        jLabel35.setForeground(new java.awt.Color(102, 102, 102));
        jLabel35.setText("Compound List");
        page2.add(jLabel35);
        jLabel35.setBounds(30, 140, 110, 17);

        ResearchReportCancelReport1.setBackground(new java.awt.Color(245, 245, 245));
        ResearchReportCancelReport1.setText("Cancel");
        ResearchReportCancelReport1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResearchReportCancelReport1ActionPerformed(evt);
            }
        });
        page2.add(ResearchReportCancelReport1);
        ResearchReportCancelReport1.setBounds(370, 400, 80, 30);

        ResearchScientistReport.addTab("Composition", page2);

        page3.setBackground(new java.awt.Color(255, 255, 255));
        page3.setLayout(null);

        ResearchReportSubmitReport.setBackground(new java.awt.Color(0, 102, 153));
        ResearchReportSubmitReport.setForeground(new java.awt.Color(255, 255, 255));
        ResearchReportSubmitReport.setText("Submit");
        ResearchReportSubmitReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResearchReportSubmitReportActionPerformed(evt);
            }
        });
        page3.add(ResearchReportSubmitReport);
        ResearchReportSubmitReport.setBounds(502, 423, 80, 30);

        ResearchReportCancelReport.setBackground(new java.awt.Color(245, 245, 245));
        ResearchReportCancelReport.setText("Cancel");
        ResearchReportCancelReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResearchReportCancelReportActionPerformed(evt);
            }
        });
        page3.add(ResearchReportCancelReport);
        ResearchReportCancelReport.setBounds(412, 423, 80, 30);

        jLabel12.setText("Research by:");
        page3.add(jLabel12);
        jLabel12.setBounds(30, 80, 105, 17);

        jLabel13.setText("jLabel13");
        page3.add(jLabel13);
        jLabel13.setBounds(140, 80, 147, 17);

        jLabel14.setText("Drug name:");
        page3.add(jLabel14);
        jLabel14.setBounds(30, 110, 105, 17);

        jLabel15.setText("jLabel13");
        page3.add(jLabel15);
        jLabel15.setBounds(140, 110, 147, 17);

        jLabel16.setText("Disease target:");
        page3.add(jLabel16);
        jLabel16.setBounds(30, 140, 105, 17);

        jLabel17.setText("Date:");
        page3.add(jLabel17);
        jLabel17.setBounds(30, 170, 105, 17);

        jLabel18.setText("Notes:");
        page3.add(jLabel18);
        jLabel18.setBounds(30, 240, 105, 17);

        jLabel19.setText("Research lead:");
        page3.add(jLabel19);
        jLabel19.setBounds(30, 200, 105, 17);

        jLabel20.setText("jLabel13");
        page3.add(jLabel20);
        jLabel20.setBounds(140, 140, 147, 17);

        jLabel21.setText("jLabel13");
        page3.add(jLabel21);
        jLabel21.setBounds(140, 170, 147, 17);

        jLabel23.setText("jLabel13");
        page3.add(jLabel23);
        jLabel23.setBounds(140, 200, 147, 17);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        page3.add(jScrollPane4);
        jScrollPane4.setBounds(140, 240, 440, 60);

        jLabel22.setText("Composition:");
        page3.add(jLabel22);
        jLabel22.setBounds(30, 320, 105, 17);

        jScrollPane5.setViewportView(jList2);

        page3.add(jScrollPane5);
        jScrollPane5.setBounds(140, 320, 440, 70);

        firstLoginEnterpriseTitle4.setBackground(new java.awt.Color(0, 0, 0));
        firstLoginEnterpriseTitle4.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        firstLoginEnterpriseTitle4.setText("Summary");
        page3.add(firstLoginEnterpriseTitle4);
        firstLoginEnterpriseTitle4.setBounds(30, 30, 115, 30);

        ResearchScientistReport.addTab("Summary", page3);

        leftComponent.add(ResearchScientistReport, "card7");

        ManufacturingAnalystHome.setBackground(new java.awt.Color(255, 255, 255));
        ManufacturingAnalystHome.setLayout(null);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Report ID", "Drug name", "Date", "Disease target", "Report to"
            }
        ));
        jScrollPane11.setViewportView(jTable3);

        ManufacturingAnalystHome.add(jScrollPane11);
        jScrollPane11.setBounds(38, 158, 832, 340);

        jButton1.setBackground(new java.awt.Color(0, 102, 153));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Add manufacturing details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        ManufacturingAnalystHome.add(jButton1);
        jButton1.setBounds(680, 520, 190, 40);

        jButton2.setText("View report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        ManufacturingAnalystHome.add(jButton2);
        jButton2.setBounds(570, 520, 100, 40);

        Title3.setFont(new java.awt.Font("Helvetica Neue", 1, 28)); // NOI18N
        Title3.setText("Manufacturing Analyst");
        ManufacturingAnalystHome.add(Title3);
        Title3.setBounds(40, 40, 310, 35);

        ageLabelR9.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        ageLabelR9.setForeground(new java.awt.Color(102, 102, 102));
        ageLabelR9.setText("As a manufacturing analyst, you need to add details about the distribution and dosage to the report.");
        ManufacturingAnalystHome.add(ageLabelR9);
        ageLabelR9.setBounds(40, 81, 631, 18);

        ageLabelR10.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        ageLabelR10.setText("All Reports");
        ManufacturingAnalystHome.add(ageLabelR10);
        ageLabelR10.setBounds(40, 130, 110, 18);

        ageLabelR11.setText("Search");
        ManufacturingAnalystHome.add(ageLabelR11);
        ageLabelR11.setBounds(670, 120, 40, 30);

        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });
        jTextField11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField11KeyReleased(evt);
            }
        });
        ManufacturingAnalystHome.add(jTextField11);
        jTextField11.setBounds(720, 120, 150, 30);

        leftComponent.add(ManufacturingAnalystHome, "card8");

        AddManufacturingDetails.setBackground(new java.awt.Color(255, 255, 255));
        AddManufacturingDetails.setLayout(null);

        jLabel25.setText("Report ID:");
        AddManufacturingDetails.add(jLabel25);
        jLabel25.setBounds(40, 140, 59, 17);

        jLabel26.setText("Research by:");
        AddManufacturingDetails.add(jLabel26);
        jLabel26.setBounds(40, 170, 78, 17);

        jLabel28.setText("Report lead:");
        AddManufacturingDetails.add(jLabel28);
        jLabel28.setBounds(40, 200, 78, 17);

        jLabel29.setText("Distribution:");
        AddManufacturingDetails.add(jLabel29);
        jLabel29.setBounds(40, 240, 78, 17);

        jLabel30.setText("Dosage Details");
        AddManufacturingDetails.add(jLabel30);
        jLabel30.setBounds(40, 390, 100, 17);
        AddManufacturingDetails.add(jTextField2);
        jTextField2.setBounds(150, 240, 750, 70);

        jScrollPane12.setViewportView(jList4);

        AddManufacturingDetails.add(jScrollPane12);
        jScrollPane12.setBounds(150, 390, 420, 130);
        AddManufacturingDetails.add(jTextField3);
        jTextField3.setBounds(150, 340, 60, 30);

        jLabel38.setText("Age");
        AddManufacturingDetails.add(jLabel38);
        jLabel38.setBounds(220, 340, 22, 30);
        AddManufacturingDetails.add(jTextField4);
        jTextField4.setBounds(270, 340, 70, 30);

        jLabel39.setText("Quantity");
        AddManufacturingDetails.add(jLabel39);
        jLabel39.setBounds(350, 340, 49, 30);

        jButton3.setBackground(new java.awt.Color(245, 245, 245));
        jButton3.setText("Add");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        AddManufacturingDetails.add(jButton3);
        jButton3.setBounds(483, 340, 90, 30);

        jButton4.setBackground(new java.awt.Color(245, 245, 245));
        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        AddManufacturingDetails.add(jButton4);
        jButton4.setBounds(500, 530, 72, 23);

        jButton5.setBackground(new java.awt.Color(0, 102, 204));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Add details");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        AddManufacturingDetails.add(jButton5);
        jButton5.setBounds(450, 580, 120, 30);

        jButton6.setBackground(new java.awt.Color(245, 245, 245));
        jButton6.setText("Cancel");
        AddManufacturingDetails.add(jButton6);
        jButton6.setBounds(350, 580, 90, 30);

        jLabel40.setText("jLabel40");
        AddManufacturingDetails.add(jLabel40);
        jLabel40.setBounds(150, 140, 258, 17);

        jLabel41.setText("jLabel41");
        AddManufacturingDetails.add(jLabel41);
        jLabel41.setBounds(150, 170, 258, 17);

        jLabel42.setText("jLabel42");
        AddManufacturingDetails.add(jLabel42);
        jLabel42.setBounds(150, 200, 258, 17);

        ageLabelR12.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        ageLabelR12.setForeground(new java.awt.Color(102, 102, 102));
        ageLabelR12.setText("Specify distribution and dosage details here");
        AddManufacturingDetails.add(ageLabelR12);
        ageLabelR12.setBounds(40, 81, 277, 18);

        Title4.setFont(new java.awt.Font("Helvetica Neue", 1, 28)); // NOI18N
        Title4.setText("Add Details");
        AddManufacturingDetails.add(Title4);
        Title4.setBounds(40, 40, 310, 35);

        jLabel58.setText("Dosage:");
        AddManufacturingDetails.add(jLabel58);
        jLabel58.setBounds(40, 340, 78, 17);

        leftComponent.add(AddManufacturingDetails, "card10");

        ResearchScientistViewReport.setBackground(new java.awt.Color(255, 255, 255));
        ResearchScientistViewReport.setLayout(null);

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        DiscoveryDevelopment.setBackground(new java.awt.Color(255, 255, 255));
        DiscoveryDevelopment.setLayout(null);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        DiscoveryDevelopment.add(jTextField1);
        jTextField1.setBounds(460, 60, 180, 23);

        jLabel32.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel32.setText("Notes");
        DiscoveryDevelopment.add(jLabel32);
        jLabel32.setBounds(20, 250, 37, 18);

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        DiscoveryDevelopment.add(jTextField5);
        jTextField5.setBounds(240, 60, 180, 23);

        jLabel33.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel33.setText("Disease Target:");
        DiscoveryDevelopment.add(jLabel33);
        jLabel33.setBounds(240, 30, 110, 20);

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        DiscoveryDevelopment.add(jTextField6);
        jTextField6.setBounds(20, 60, 180, 23);

        jLabel34.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel34.setText("Drug Name");
        DiscoveryDevelopment.add(jLabel34);
        jLabel34.setBounds(20, 30, 80, 20);

        jLabel37.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel37.setText("Research Lead:");
        DiscoveryDevelopment.add(jLabel37);
        jLabel37.setBounds(680, 30, 102, 18);

        jLabel36.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel36.setText("Research By:");
        DiscoveryDevelopment.add(jLabel36);
        jLabel36.setBounds(460, 30, 87, 18);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane8.setViewportView(jTextArea3);

        DiscoveryDevelopment.add(jScrollPane8);
        jScrollPane8.setBounds(20, 280, 860, 90);

        viewReportBackButton.setText("Back");
        viewReportBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewReportBackButtonActionPerformed(evt);
            }
        });
        DiscoveryDevelopment.add(viewReportBackButton);
        viewReportBackButton.setBounds(810, 390, 72, 23);

        jLabel59.setText("jLabel59");
        DiscoveryDevelopment.add(jLabel59);
        jLabel59.setBounds(680, 60, 130, 20);

        jTabbedPane1.addTab("Discovery and Development", DiscoveryDevelopment);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jLabel43.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel43.setText("Distribution");
        jPanel2.add(jLabel43);
        jLabel43.setBounds(20, 110, 150, 18);

        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField12ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField12);
        jTextField12.setBounds(20, 140, 870, 80);

        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField13);
        jTextField13.setBounds(20, 60, 258, 23);

        jLabel44.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel44.setText("Manufactoring Analyst");
        jPanel2.add(jLabel44);
        jLabel44.setBounds(18, 31, 167, 18);

        jTabbedPane1.addTab("Distribution and Dosage", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(null);

        jLabel46.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel46.setText("GLP Officer");
        jPanel3.add(jLabel46);
        jLabel46.setBounds(18, 29, 150, 18);

        jLabel47.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel47.setText("Side effects");
        jPanel3.add(jLabel47);
        jLabel47.setBounds(20, 230, 75, 18);

        jTextField15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField15ActionPerformed(evt);
            }
        });
        jPanel3.add(jTextField15);
        jTextField15.setBounds(20, 60, 180, 23);

        jTextField18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField18ActionPerformed(evt);
            }
        });
        jPanel3.add(jTextField18);
        jTextField18.setBounds(230, 60, 190, 23);

        jLabel49.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel49.setText("Researcher");
        jPanel3.add(jLabel49);
        jLabel49.setBounds(230, 30, 150, 18);

        jLabel48.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel48.setText("Success");
        jPanel3.add(jLabel48);
        jLabel48.setBounds(700, 30, 150, 18);

        jLabel76.setText("Value");
        jPanel3.add(jLabel76);
        jLabel76.setBounds(490, 60, 49, 17);

        jTextArea10.setColumns(20);
        jTextArea10.setRows(5);
        jScrollPane25.setViewportView(jTextArea10);

        jPanel3.add(jScrollPane25);
        jScrollPane25.setBounds(18, 137, 870, 70);

        jTextArea11.setColumns(20);
        jTextArea11.setRows(5);
        jScrollPane26.setViewportView(jTextArea11);

        jPanel3.add(jScrollPane26);
        jScrollPane26.setBounds(20, 260, 870, 91);

        jLabel101.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel101.setText("Reactions");
        jPanel3.add(jLabel101);
        jLabel101.setBounds(20, 110, 150, 18);

        jLabel102.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel102.setText("Total test conducted:");
        jPanel3.add(jLabel102);
        jLabel102.setBounds(480, 30, 150, 18);

        jTabbedPane1.addTab("Clinical Testing", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(null);

        jTextField19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField19ActionPerformed(evt);
            }
        });
        jPanel4.add(jTextField19);
        jTextField19.setBounds(20, 70, 190, 23);

        jLabel50.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel50.setText("Toxicology Specialist");
        jPanel4.add(jLabel50);
        jLabel50.setBounds(20, 40, 150, 18);

        jLabel51.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel51.setText("FDA Project Manager");
        jPanel4.add(jLabel51);
        jLabel51.setBounds(260, 40, 150, 18);

        jTextField20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField20ActionPerformed(evt);
            }
        });
        jPanel4.add(jTextField20);
        jTextField20.setBounds(260, 70, 190, 23);

        jLabel52.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel52.setText("Toxicology Remarks");
        jPanel4.add(jLabel52);
        jLabel52.setBounds(20, 120, 150, 18);

        jLabel53.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel53.setText("FDA Approval Status");
        jPanel4.add(jLabel53);
        jLabel53.setBounds(20, 270, 150, 18);

        jTextArea5.setColumns(20);
        jTextArea5.setRows(5);
        jScrollPane14.setViewportView(jTextArea5);

        jPanel4.add(jScrollPane14);
        jScrollPane14.setBounds(20, 151, 860, 90);

        jLabel60.setText("jLabel60");
        jPanel4.add(jLabel60);
        jLabel60.setBounds(200, 270, 160, 20);

        jTabbedPane1.addTab("FDA Approval", jPanel4);

        ResearchScientistViewReport.add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 191, 960, 550);

        jLabel99.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel99.setForeground(new java.awt.Color(255, 255, 255));
        jLabel99.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel99.setText("Drug Research Report");
        ResearchScientistViewReport.add(jLabel99);
        jLabel99.setBounds(-5, 21, 970, 40);

        jLabel100.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel100.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel100.setText("Research Scientists, Manufactoring Analysts, GLP officers and FDA Regulatos have participated in this research.");
        ResearchScientistViewReport.add(jLabel100);
        jLabel100.setBounds(0, 140, 960, 30);

        jPanel6.setBackground(new java.awt.Color(0, 51, 102));
        jPanel6.setLayout(null);

        jLabel24.setFont(new java.awt.Font("Liberation Sans", 0, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(204, 204, 204));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Report ID:");
        jPanel6.add(jLabel24);
        jLabel24.setBounds(-1, 50, 960, 30);

        ResearchScientistViewReport.add(jPanel6);
        jPanel6.setBounds(0, 0, 960, 100);

        jLabel103.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel103.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel103.setText("This report is created under the supervision of research experts and Industry Specialists.");
        ResearchScientistViewReport.add(jLabel103);
        jLabel103.setBounds(0, 120, 960, 30);

        leftComponent.add(ResearchScientistViewReport, "card6");

        ClinicalResearchers.setBackground(new java.awt.Color(255, 255, 255));
        ClinicalResearchers.setLayout(null);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Report ID", "Drug name", "Date", "Disease target", "Report to"
            }
        ));
        jScrollPane15.setViewportView(jTable4);

        ClinicalResearchers.add(jScrollPane15);
        jScrollPane15.setBounds(39, 158, 840, 360);

        ViewReport2.setBackground(new java.awt.Color(245, 245, 245));
        ViewReport2.setText("View Trail");
        ViewReport2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewReport2ActionPerformed(evt);
            }
        });
        ClinicalResearchers.add(ViewReport2);
        ViewReport2.setBounds(770, 540, 110, 30);

        jTextField14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField14ActionPerformed(evt);
            }
        });
        jTextField14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField14KeyReleased(evt);
            }
        });
        ClinicalResearchers.add(jTextField14);
        jTextField14.setBounds(730, 120, 150, 30);

        ageLabelR13.setText("Search");
        ClinicalResearchers.add(ageLabelR13);
        ageLabelR13.setBounds(680, 120, 40, 30);

        ageLabelR14.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        ageLabelR14.setText("All Reports");
        ClinicalResearchers.add(ageLabelR14);
        ageLabelR14.setBounds(40, 130, 110, 18);

        ageLabelR15.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        ageLabelR15.setForeground(new java.awt.Color(102, 102, 102));
        ageLabelR15.setText("As a Clinical Researcher, you will work on trails created by the GLP Officer and add your findings to the report.");
        ClinicalResearchers.add(ageLabelR15);
        ageLabelR15.setBounds(40, 81, 840, 18);

        Title5.setFont(new java.awt.Font("Helvetica Neue", 1, 28)); // NOI18N
        Title5.setText("Clinical Researcher");
        ClinicalResearchers.add(Title5);
        Title5.setBounds(40, 40, 260, 35);

        leftComponent.add(ClinicalResearchers, "card8");

        GLPOfficersHome.setBackground(new java.awt.Color(255, 255, 255));
        GLPOfficersHome.setLayout(null);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Report ID", "Drug name", "Date", "Disease target", "Report to"
            }
        ));
        jScrollPane16.setViewportView(jTable5);

        GLPOfficersHome.add(jScrollPane16);
        jScrollPane16.setBounds(39, 163, 840, 380);

        ViewReport1.setBackground(new java.awt.Color(245, 245, 245));
        ViewReport1.setText("View Report");
        ViewReport1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewReport1ActionPerformed(evt);
            }
        });
        GLPOfficersHome.add(ViewReport1);
        ViewReport1.setBounds(620, 560, 120, 30);

        createTrail.setBackground(new java.awt.Color(0, 102, 204));
        createTrail.setForeground(new java.awt.Color(255, 255, 255));
        createTrail.setText("Create Trail");
        createTrail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTrailActionPerformed(evt);
            }
        });
        GLPOfficersHome.add(createTrail);
        createTrail.setBounds(750, 560, 130, 30);

        ageLabelR16.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        ageLabelR16.setForeground(new java.awt.Color(102, 102, 102));
        ageLabelR16.setText("As a GLP Officer, you'll start clinical trails and specify the basic details of trail. ");
        GLPOfficersHome.add(ageLabelR16);
        ageLabelR16.setBounds(40, 81, 840, 18);

        ageLabelR17.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        ageLabelR17.setText("All Reports");
        GLPOfficersHome.add(ageLabelR17);
        ageLabelR17.setBounds(40, 130, 110, 18);

        jTextField16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField16ActionPerformed(evt);
            }
        });
        jTextField16.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField16KeyReleased(evt);
            }
        });
        GLPOfficersHome.add(jTextField16);
        jTextField16.setBounds(730, 120, 150, 30);

        ageLabelR18.setText("Search");
        GLPOfficersHome.add(ageLabelR18);
        ageLabelR18.setBounds(680, 120, 40, 30);

        Title6.setFont(new java.awt.Font("Helvetica Neue", 1, 28)); // NOI18N
        Title6.setText("GLP Officer");
        GLPOfficersHome.add(Title6);
        Title6.setBounds(40, 40, 155, 35);

        leftComponent.add(GLPOfficersHome, "card8");

        CreateTrail.setBackground(new java.awt.Color(255, 255, 255));
        CreateTrail.setLayout(null);

        jLabel64.setFont(new java.awt.Font("Helvetica", 1, 28)); // NOI18N
        jLabel64.setText("Create Trail");
        CreateTrail.add(jLabel64);
        jLabel64.setBounds(50, 30, 340, 29);

        cancel.setBackground(new java.awt.Color(245, 245, 245));
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        CreateTrail.add(cancel);
        cancel.setBounds(450, 600, 110, 30);

        usernameLabelR1.setText("No of Volunteers:");
        CreateTrail.add(usernameLabelR1);
        usernameLabelR1.setBounds(50, 180, 240, 30);

        usernameTextFieldR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextFieldR1ActionPerformed(evt);
            }
        });
        CreateTrail.add(usernameTextFieldR1);
        usernameTextFieldR1.setBounds(300, 180, 110, 23);

        usernameLabelR2.setForeground(new java.awt.Color(102, 102, 102));
        usernameLabelR2.setText("To be filled by clinical researchers");
        CreateTrail.add(usernameLabelR2);
        usernameLabelR2.setBounds(50, 490, 240, 30);

        usernameLabelR3.setText("Drug Reactions");
        CreateTrail.add(usernameLabelR3);
        usernameLabelR3.setBounds(50, 350, 240, 30);

        usernameLabelR4.setText("Side Effects");
        CreateTrail.add(usernameLabelR4);
        usernameLabelR4.setBounds(50, 460, 240, 30);

        usernameLabelR5.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        usernameLabelR5.setText("Dosage directions");
        CreateTrail.add(usernameLabelR5);
        usernameLabelR5.setBounds(50, 230, 240, 30);

        usernameLabelR7.setText("Drug Name");
        CreateTrail.add(usernameLabelR7);
        usernameLabelR7.setBounds(50, 130, 240, 30);

        usernameTextFieldR5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextFieldR5ActionPerformed(evt);
            }
        });
        CreateTrail.add(usernameTextFieldR5);
        usernameTextFieldR5.setBounds(300, 130, 110, 23);

        usernameLabelR8.setForeground(new java.awt.Color(102, 102, 102));
        usernameLabelR8.setText("To be filled by clinical researchers");
        CreateTrail.add(usernameLabelR8);
        usernameLabelR8.setBounds(50, 370, 240, 30);

        jLabel65.setText("Report ID:");
        CreateTrail.add(jLabel65);
        jLabel65.setBounds(50, 90, 120, 17);

        jLabel66.setText("jLabel66");
        CreateTrail.add(jLabel66);
        jLabel66.setBounds(300, 90, 140, 17);

        jLabel67.setText("Assign researcher:");
        CreateTrail.add(jLabel67);
        jLabel67.setBounds(450, 130, 130, 20);

        jTextArea6.setColumns(20);
        jTextArea6.setRows(5);
        jScrollPane18.setViewportView(jTextArea6);

        CreateTrail.add(jScrollPane18);
        jScrollPane18.setBounds(300, 360, 390, 91);

        jTextArea7.setColumns(20);
        jTextArea7.setRows(5);
        jScrollPane19.setViewportView(jTextArea7);

        CreateTrail.add(jScrollPane19);
        jScrollPane19.setBounds(300, 470, 390, 91);

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        CreateTrail.add(jComboBox5);
        jComboBox5.setBounds(600, 130, 190, 23);

        createTrail2.setBackground(new java.awt.Color(0, 102, 153));
        createTrail2.setForeground(new java.awt.Color(255, 255, 255));
        createTrail2.setText("Save");
        createTrail2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTrail2ActionPerformed(evt);
            }
        });
        CreateTrail.add(createTrail2);
        createTrail2.setBounds(570, 600, 120, 30);

        jScrollPane29.setViewportView(jList7);

        CreateTrail.add(jScrollPane29);
        jScrollPane29.setBounds(300, 230, 390, 100);

        leftComponent.add(CreateTrail, "card8");

        RegulatoryHealthManager.setBackground(new java.awt.Color(255, 255, 255));
        RegulatoryHealthManager.setLayout(null);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Report ID", "Drug name", "Date", "Disease target", "Report to"
            }
        ));
        jScrollPane20.setViewportView(jTable6);

        RegulatoryHealthManager.add(jScrollPane20);
        jScrollPane20.setBounds(35, 158, 850, 330);

        ViewReport3.setText("View Report");
        ViewReport3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewReport3ActionPerformed(evt);
            }
        });
        RegulatoryHealthManager.add(ViewReport3);
        ViewReport3.setBounds(580, 510, 110, 30);

        AddReport1.setBackground(new java.awt.Color(0, 102, 153));
        AddReport1.setForeground(new java.awt.Color(255, 255, 255));
        AddReport1.setText("Add Toxicology Report");
        AddReport1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddReport1ActionPerformed(evt);
            }
        });
        RegulatoryHealthManager.add(AddReport1);
        AddReport1.setBounds(700, 510, 180, 30);

        ageLabelR19.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        ageLabelR19.setForeground(new java.awt.Color(102, 102, 102));
        ageLabelR19.setText("As a Health Manager, you'll observe the report and determine the presence of harmful toxins in the report");
        RegulatoryHealthManager.add(ageLabelR19);
        ageLabelR19.setBounds(40, 81, 840, 18);

        ageLabelR20.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        ageLabelR20.setText("All Reports");
        RegulatoryHealthManager.add(ageLabelR20);
        ageLabelR20.setBounds(40, 130, 110, 18);

        jTextField17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField17ActionPerformed(evt);
            }
        });
        jTextField17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField17KeyReleased(evt);
            }
        });
        RegulatoryHealthManager.add(jTextField17);
        jTextField17.setBounds(730, 120, 150, 30);

        ageLabelR21.setText("Search");
        RegulatoryHealthManager.add(ageLabelR21);
        ageLabelR21.setBounds(680, 120, 40, 30);

        Title7.setFont(new java.awt.Font("Helvetica Neue", 1, 28)); // NOI18N
        Title7.setText("Regulatory Health Manager");
        RegulatoryHealthManager.add(Title7);
        Title7.setBounds(40, 40, 367, 35);

        leftComponent.add(RegulatoryHealthManager, "card4");

        MedicalOfficerHome.setBackground(new java.awt.Color(255, 255, 255));
        MedicalOfficerHome.setMaximumSize(new java.awt.Dimension(1129, 760));
        MedicalOfficerHome.setPreferredSize(new java.awt.Dimension(1129, 760));
        MedicalOfficerHome.setLayout(null);

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Report ID", "Drug name", "Date", "Disease target", "Report to", "Final Status"
            }
        ));
        jScrollPane21.setViewportView(jTable7);

        MedicalOfficerHome.add(jScrollPane21);
        jScrollPane21.setBounds(30, 162, 850, 320);

        ViewReport4.setBackground(new java.awt.Color(245, 245, 245));
        ViewReport4.setText("View Report");
        ViewReport4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewReport4ActionPerformed(evt);
            }
        });
        MedicalOfficerHome.add(ViewReport4);
        ViewReport4.setBounds(570, 510, 110, 30);

        AddReport2.setBackground(new java.awt.Color(0, 102, 153));
        AddReport2.setForeground(new java.awt.Color(255, 255, 255));
        AddReport2.setText("Approve");
        AddReport2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddReport2MouseClicked(evt);
            }
        });
        AddReport2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddReport2ActionPerformed(evt);
            }
        });
        MedicalOfficerHome.add(AddReport2);
        AddReport2.setBounds(790, 510, 90, 30);

        jButton7.setBackground(new java.awt.Color(245, 245, 245));
        jButton7.setText("Reject");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        MedicalOfficerHome.add(jButton7);
        jButton7.setBounds(690, 510, 90, 30);

        ageLabelR22.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        ageLabelR22.setForeground(new java.awt.Color(102, 102, 102));
        ageLabelR22.setText("As a FDA Medical Officer, you'll analyze the reports and mark them as approved or rejected.");
        MedicalOfficerHome.add(ageLabelR22);
        ageLabelR22.setBounds(40, 81, 840, 18);

        ageLabelR23.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        ageLabelR23.setText("All Reports");
        MedicalOfficerHome.add(ageLabelR23);
        ageLabelR23.setBounds(40, 130, 110, 18);

        jTextField21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField21ActionPerformed(evt);
            }
        });
        jTextField21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField21KeyReleased(evt);
            }
        });
        MedicalOfficerHome.add(jTextField21);
        jTextField21.setBounds(730, 120, 150, 30);

        ageLabelR24.setText("Search");
        MedicalOfficerHome.add(ageLabelR24);
        ageLabelR24.setBounds(680, 120, 40, 30);

        Title8.setFont(new java.awt.Font("Helvetica Neue", 1, 28)); // NOI18N
        Title8.setText("Medical Officer");
        MedicalOfficerHome.add(Title8);
        Title8.setBounds(40, 40, 202, 35);

        leftComponent.add(MedicalOfficerHome, "card4");

        AddToxicologyReport.setBackground(new java.awt.Color(255, 255, 255));
        AddToxicologyReport.setLayout(null);

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });
        AddToxicologyReport.add(jComboBox6);
        jComboBox6.setBounds(200, 510, 234, 23);

        AssignToDevDecsion1.setBackground(new java.awt.Color(0, 102, 153));
        AssignToDevDecsion1.setForeground(new java.awt.Color(255, 255, 255));
        AssignToDevDecsion1.setText("Submit");
        AssignToDevDecsion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignToDevDecsion1ActionPerformed(evt);
            }
        });
        AddToxicologyReport.add(AssignToDevDecsion1);
        AssignToDevDecsion1.setBounds(640, 570, 100, 30);

        CancelAssigning1.setBackground(new java.awt.Color(245, 245, 245));
        CancelAssigning1.setText("Cancel");
        CancelAssigning1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelAssigning1ActionPerformed(evt);
            }
        });
        AddToxicologyReport.add(CancelAssigning1);
        CancelAssigning1.setBounds(530, 570, 100, 30);

        jScrollPane24.setViewportView(jList8);

        AddToxicologyReport.add(jScrollPane24);
        jScrollPane24.setBounds(560, 310, 180, 130);

        jLabel71.setBackground(new java.awt.Color(204, 204, 204));
        jLabel71.setText("Composition");
        AddToxicologyReport.add(jLabel71);
        jLabel71.setBounds(560, 290, 110, 17);

        jTextArea8.setColumns(20);
        jTextArea8.setRows(5);
        jScrollPane22.setViewportView(jTextArea8);

        AddToxicologyReport.add(jScrollPane22);
        jScrollPane22.setBounds(150, 310, 353, 130);

        jLabel73.setText("Assign to Medical Officer");
        AddToxicologyReport.add(jLabel73);
        jLabel73.setBounds(30, 510, 190, 17);

        jTextArea9.setColumns(20);
        jTextArea9.setRows(5);
        jScrollPane23.setViewportView(jTextArea9);

        AddToxicologyReport.add(jScrollPane23);
        jScrollPane23.setBounds(150, 170, 590, 91);

        jLabel74.setText("Report ID:");
        AddToxicologyReport.add(jLabel74);
        jLabel74.setBounds(40, 120, 59, 17);

        jLabel75.setText("jLabel75");
        AddToxicologyReport.add(jLabel75);
        jLabel75.setBounds(120, 120, 49, 17);

        Title9.setFont(new java.awt.Font("Helvetica Neue", 1, 28)); // NOI18N
        Title9.setText("Add Toxicology Report");
        AddToxicologyReport.add(Title9);
        Title9.setBounds(40, 40, 390, 35);

        jLabel87.setText("Side effects:");
        AddToxicologyReport.add(jLabel87);
        jLabel87.setBounds(40, 170, 74, 17);

        jLabel104.setText("Toxins Found");
        AddToxicologyReport.add(jLabel104);
        jLabel104.setBounds(30, 310, 78, 17);

        leftComponent.add(AddToxicologyReport, "card9");

        AdvertisingSpecialist.setBackground(new java.awt.Color(255, 255, 255));
        AdvertisingSpecialist.setLayout(null);

        AssignToDevDecsion2.setBackground(new java.awt.Color(0, 102, 204));
        AssignToDevDecsion2.setForeground(new java.awt.Color(255, 255, 255));
        AssignToDevDecsion2.setText("Add Advertising Info");
        AssignToDevDecsion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignToDevDecsion2ActionPerformed(evt);
            }
        });
        AdvertisingSpecialist.add(AssignToDevDecsion2);
        AssignToDevDecsion2.setBounds(708, 500, 170, 40);

        AddSpecialistTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Report ID", "Drug name", "Date", "Disease target", "Report to"
            }
        ));
        jScrollPane33.setViewportView(AddSpecialistTable);

        AdvertisingSpecialist.add(jScrollPane33);
        jScrollPane33.setBounds(37, 155, 840, 330);

        ViewReport5.setText("View Report");
        AdvertisingSpecialist.add(ViewReport5);
        ViewReport5.setBounds(439, 300, 101, 23);

        ViewReport6.setBackground(new java.awt.Color(245, 245, 245));
        ViewReport6.setText("View Report");
        ViewReport6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewReport6ActionPerformed(evt);
            }
        });
        AdvertisingSpecialist.add(ViewReport6);
        ViewReport6.setBounds(570, 500, 130, 40);

        ageLabelR25.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        ageLabelR25.setText("All Reports");
        AdvertisingSpecialist.add(ageLabelR25);
        ageLabelR25.setBounds(40, 130, 110, 18);

        ageLabelR26.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        ageLabelR26.setForeground(new java.awt.Color(102, 102, 102));
        ageLabelR26.setText("As an advertising Specialist, you'll add advertising information for the drugs.");
        AdvertisingSpecialist.add(ageLabelR26);
        ageLabelR26.setBounds(40, 81, 480, 18);

        Title10.setFont(new java.awt.Font("Helvetica Neue", 1, 28)); // NOI18N
        Title10.setText("Advertising Specialist");
        AdvertisingSpecialist.add(Title10);
        Title10.setBounds(40, 40, 360, 35);

        ageLabelR27.setText("Search");
        AdvertisingSpecialist.add(ageLabelR27);
        ageLabelR27.setBounds(680, 120, 40, 30);

        jTextField22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField22ActionPerformed(evt);
            }
        });
        jTextField22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField22KeyReleased(evt);
            }
        });
        AdvertisingSpecialist.add(jTextField22);
        jTextField22.setBounds(730, 120, 150, 30);

        leftComponent.add(AdvertisingSpecialist, "card9");

        AddAdvertising.setBackground(new java.awt.Color(255, 255, 255));
        AddAdvertising.setLayout(null);

        AssignToDevDecsion3.setText("Add");
        AssignToDevDecsion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignToDevDecsion3ActionPerformed(evt);
            }
        });
        AddAdvertising.add(AssignToDevDecsion3);
        AssignToDevDecsion3.setBounds(812, 420, 100, 23);

        CancelAssigning3.setText("Cancel");
        CancelAssigning3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelAssigning3ActionPerformed(evt);
            }
        });
        AddAdvertising.add(CancelAssigning3);
        CancelAssigning3.setBounds(730, 420, 72, 23);

        jLabel83.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel83.setText("Add Advertising Info");
        AddAdvertising.add(jLabel83);
        jLabel83.setBounds(30, 40, 270, 30);

        jLabel86.setText("Product Claim Information:");
        AddAdvertising.add(jLabel86);
        jLabel86.setBounds(30, 210, 160, 17);

        jLabel77.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel77.setText("found in medical journals, newspapers, and magazines, and on the Internet, television, or radio.");
        AddAdvertising.add(jLabel77);
        jLabel77.setBounds(30, 120, 910, 18);

        jLabel78.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel78.setText("All advertisements, such as product claims or reminder ads, cannot be false or misleading. They must contain truthful information about a ");
        AddAdvertising.add(jLabel78);
        jLabel78.setBounds(30, 80, 910, 18);

        jLabel79.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel79.setText("They must contain truthful information about a drug’s effectiveness, side effects, and prescribing information. These advertisements can be ");
        AddAdvertising.add(jLabel79);
        jLabel79.setBounds(30, 100, 910, 18);

        jTextArea12.setColumns(20);
        jTextArea12.setRows(5);
        jScrollPane27.setViewportView(jTextArea12);

        AddAdvertising.add(jScrollPane27);
        jScrollPane27.setBounds(200, 210, 710, 180);
        AddAdvertising.add(jSeparator1);
        jSeparator1.setBounds(30, 170, 880, 20);

        leftComponent.add(AddAdvertising, "card9");

        SafetyInspectorOfficer.setBackground(new java.awt.Color(255, 255, 255));
        SafetyInspectorOfficer.setLayout(null);

        AssignToDevDecsion5.setBackground(new java.awt.Color(0, 102, 204));
        AssignToDevDecsion5.setForeground(new java.awt.Color(255, 255, 255));
        AssignToDevDecsion5.setText("Add Inspection Visit");
        AssignToDevDecsion5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignToDevDecsion5ActionPerformed(evt);
            }
        });
        SafetyInspectorOfficer.add(AssignToDevDecsion5);
        AssignToDevDecsion5.setBounds(727, 500, 160, 30);

        jTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Report ID", "Drug name", "Date", "Disease target", "Report to"
            }
        ));
        jScrollPane34.setViewportView(jTable9);

        SafetyInspectorOfficer.add(jScrollPane34);
        jScrollPane34.setBounds(37, 155, 850, 330);

        ViewReport7.setText("View Report");
        ViewReport7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewReport7ActionPerformed(evt);
            }
        });
        SafetyInspectorOfficer.add(ViewReport7);
        ViewReport7.setBounds(439, 300, 101, 23);

        ViewReport8.setBackground(new java.awt.Color(245, 245, 245));
        ViewReport8.setText("View Report");
        ViewReport8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewReport8ActionPerformed(evt);
            }
        });
        SafetyInspectorOfficer.add(ViewReport8);
        ViewReport8.setBounds(590, 500, 120, 30);

        ageLabelR28.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        ageLabelR28.setText("All Reports");
        SafetyInspectorOfficer.add(ageLabelR28);
        ageLabelR28.setBounds(40, 130, 110, 18);

        ageLabelR29.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        ageLabelR29.setForeground(new java.awt.Color(102, 102, 102));
        ageLabelR29.setText("As a afety Officer, you'll conduct frequent visits to the manufactoring facility to ensure the process meets the standards.");
        SafetyInspectorOfficer.add(ageLabelR29);
        ageLabelR29.setBounds(40, 81, 770, 18);

        Title11.setFont(new java.awt.Font("Helvetica Neue", 1, 28)); // NOI18N
        Title11.setText("Safety Inspection Officer");
        SafetyInspectorOfficer.add(Title11);
        Title11.setBounds(40, 40, 330, 35);

        ageLabelR30.setText("Search");
        SafetyInspectorOfficer.add(ageLabelR30);
        ageLabelR30.setBounds(680, 120, 40, 30);

        jTextField27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField27ActionPerformed(evt);
            }
        });
        jTextField27.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField27KeyReleased(evt);
            }
        });
        SafetyInspectorOfficer.add(jTextField27);
        jTextField27.setBounds(730, 120, 150, 30);

        leftComponent.add(SafetyInspectorOfficer, "card9");

        InspectionVisit.setBackground(new java.awt.Color(255, 255, 255));
        InspectionVisit.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AssignToDevDecsion4.setText("Add");
        AssignToDevDecsion4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignToDevDecsion4ActionPerformed(evt);
            }
        });
        InspectionVisit.add(AssignToDevDecsion4, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 530, 100, -1));

        CancelAssigning4.setText("Cancel");
        CancelAssigning4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelAssigning4ActionPerformed(evt);
            }
        });
        InspectionVisit.add(CancelAssigning4, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 530, -1, -1));

        jLabel84.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel84.setText("Add Inspection Visit");
        InspectionVisit.add(jLabel84, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 270, -1));

        jLabel82.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel82.setText("FDA officials conduct routine inspections of drug manufacturing facilities across the United States, and abroad if approved products are");
        InspectionVisit.add(jLabel82, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 910, -1));

        jLabel85.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel85.setText("manufactured overseas. Manufacturers may be informed of inspections in advance, or the inspections may be unannounced.");
        InspectionVisit.add(jLabel85, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 910, -1));

        jTextArea13.setColumns(20);
        jTextArea13.setRows(5);
        jScrollPane28.setViewportView(jTextArea13);

        InspectionVisit.add(jScrollPane28, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 710, 90));
        InspectionVisit.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 880, 20));

        jLabel88.setText("Remarks:");
        InspectionVisit.add(jLabel88, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 160, -1));

        jLabel89.setText("Inspection Type:");
        InspectionVisit.add(jLabel89, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 160, 20));

        inspectionResult.add(jRadioButton1);
        jRadioButton1.setText("Pass");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        InspectionVisit.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, 60, -1));

        inspectionResult.add(jRadioButton3);
        jRadioButton3.setText("Fail");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        InspectionVisit.add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 410, 60, -1));

        jLabel90.setText("Inspection Result:");
        InspectionVisit.add(jLabel90, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 160, 20));

        jLabel91.setText("Inspection Date:");
        InspectionVisit.add(jLabel91, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 160, 20));

        inspectionType.add(jRadioButton4);
        jRadioButton4.setText("Routine");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });
        InspectionVisit.add(jRadioButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 90, -1));

        inspectionType.add(jRadioButton5);
        jRadioButton5.setText("Due to problem");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });
        InspectionVisit.add(jRadioButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 200, 140, -1));
        InspectionVisit.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, 190, -1));

        jLabel94.setText("Report ID:");
        InspectionVisit.add(jLabel94, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        jLabel95.setText("jLabel95");
        InspectionVisit.add(jLabel95, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, -1, -1));

        leftComponent.add(InspectionVisit, "card9");

        jSplitPane1.setRightComponent(leftComponent);

        javax.swing.GroupLayout WorkspaceLayout = new javax.swing.GroupLayout(Workspace);
        Workspace.setLayout(WorkspaceLayout);
        WorkspaceLayout.setHorizontalGroup(
            WorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        WorkspaceLayout.setVerticalGroup(
            WorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        Parent.add(Workspace, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Parent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(175, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Parent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    public void populateEnterpriseCombobox(EnterpriseDirectory en){
        enterpriseComboBoxR.removeAllItems();
        enterpriseComboBoxR.addItem("New enterprise");
        //app.populateEnterprise(en);
        for (Enterprise ent: en.getEntDir()){
            enterpriseComboBoxR.addItem(ent.getEnterpriseName());
            System.out.println(ent.getEnterpriseName());
        }
    }

    public String entIDGen(){
        Random ran = new Random();
        int idInt = ran.nextInt(100);
        String encID = "ENI-"+idInt;
        return encID;
    }
    
    public void populateEnterprise(){
        //EnterpriseDirectory entDir = new EnterpriseDirectory();
        Enterprise en1 = entDir.addEnterprise();
        en1.setEnterpriseName("Medical Institute");
        en1.setEnterpriseType("Discovery and development");
        System.out.println(en1.getEnterpriseType());
        en1.setEnterpriseID(entIDGen());
        enterpriseComboBoxR.addItem(en1.getEnterpriseName());
        
        Enterprise en2 = entDir.addEnterprise();
        en2.setEnterpriseName("Clinical Research Institute");
        en2.setEnterpriseType("Clinical testing");
        en2.setEnterpriseID(entIDGen());
        enterpriseComboBoxR.addItem(en2.getEnterpriseName());
        
        Enterprise en3 = entDir.addEnterprise();
        en3.setEnterpriseName("FDA");
        en3.setEnterpriseType("Review");
        en3.setEnterpriseID(entIDGen());
        enterpriseComboBoxR.addItem(en3.getEnterpriseName());
        
        Enterprise en4 = entDir.addEnterprise();
        en4.setEnterpriseName("Safety Monitoring");
        en4.setEnterpriseType("Inspection");
        en4.setEnterpriseID(entIDGen());
        enterpriseComboBoxR.addItem(en4.getEnterpriseName());
        
        Enterprise en5 = entDir.addEnterprise();
        en5.setEnterpriseName("Advertising");
        en5.setEnterpriseType("Advertising");
        en5.setEnterpriseID(entIDGen());
        enterpriseComboBoxR.addItem(en5.getEnterpriseName());
    }
    
    
    //To retrieve data from DB
    public void retrieveEmployee(){
        try{
            conForSQL.retrieveEmployeeDirectory(conn, empDir);
        }catch(SQLException e){
            System.out.println("Error with retrieving the employee data. Error: "+ e);
        }
    }
    
    public void retrieveAdvertisingInfo(){
        try{
            conForSQL.retrieveAdvertisingInformation(conn, addDir);
        }catch(SQLException e){
            System.out.println("Error in retrieving advertising information. Error: "+e);
        }
    }
    
    public void retrieveClinicalResearchReport(){
        try{
            conForSQL.retrieveClinicalResearchReport(conn, clinicalresearchdir);
        }catch(SQLException e){
            System.out.println("Error with retrieving the clinical reports data. Error: "+ e);
        }
    }
    
    public void retrieveResearchReport(){
        try{
            conForSQL.retrieveResearchReport(conn, repDir);
        }catch(SQLException e){
            System.out.println("Error with retrieving research report data. Error: "+ e);
        }
    }
    
    public void retrieveDevelopmentReport(){
        try{
            conForSQL.retrieveDevReport(conn, devRepDir);
        }catch(SQLException e){
            System.out.println("Error with retrieving development report. Error: "+e);
        }            
    }
    
    public void retrieveInspectionReport(){
        try{
            conForSQL.retrieveDevReport(conn, devRepDir);
        }catch(SQLException e){
            System.out.println("Error with retrieving inspection report. Error: "+ e);
        }
    }
    
    public void retrieveMedicalReport(){
        try{
            conForSQL.retrieveMedicalReport(conn, mediRepp);
        }catch(SQLException e){
            System.out.println("Error with retrieving medical report. Error: "+e);
        }
    }
    
    public void summaryResearchReport(){
        jLabel13.setText(ResearchReportPage1ResearchBy.getText());
        jLabel15.setText(ResearchReportPage1Name.getText());
        jLabel20.setText(ResearchReportPage1DiseaseTarget.getText());
        jLabel21.setText(jDateChooser1.getDate().toString());
        jTextArea2.setText(jTextArea1.getText());
        jLabel23.setText(jComboBox1.getSelectedItem().toString());
    }

    
    public void PanelPaint(JPanel page){
        Parent.removeAll();
        Parent.add(page);
        Parent.repaint();
        Parent.revalidate();
    }
    
    public String resRepIDGen(){
        Random ran = new Random();
        int idInt = ran.nextInt(100);
        String encID = "RER-"+idInt;
        return encID;
    }
    
    public void SplitPanelPain(JPanel page){
        leftComponent.removeAll();
        leftComponent.add(page);
        leftComponent.repaint();
        leftComponent.revalidate();
    }
    
    public void SplitPanelPainReports(JTabbedPane page){
        leftComponent.removeAll();
        leftComponent.add(page);
        leftComponent.repaint();
        leftComponent.revalidate();
    }
    
        public void disableDropdownOrganization(){
        if(enterpriseComboBoxR.getSelectedItem().toString().equals("New enterprise")){
            organizationComboBoxR.setEnabled(false);
        }else{
            organizationComboBoxR.setEnabled(true);
        }
    }
    
    public void disableDropdownRole(){
        if (organizationComboBoxR.getSelectedItem().toString().equals("New organization")){
            roleComboBoxR.setEnabled(false);
        }else{
            roleComboBoxR.setEnabled(true);
        }
    }
    
    public void showSpecificOrganization(String enterprisename){
        organizationComboBoxR.removeAllItems();
        organizationComboBoxR.addItem("New organization");
        Enterprise ent = new Enterprise();
        for(Enterprise en: entDir.getEntDir()){
            if (en.getEnterpriseName().equals(enterprisename)){
                ent = en;
            }
        }if(ent.getEnterpriseType().equals("Discovery and development")){
            organizationComboBoxR.addItem("Discovery");
            organizationComboBoxR.addItem("Development");
        }else if(ent.getEnterpriseType().equals("Clinical testing")){
            organizationComboBoxR.addItem("GLP Regulators");
            organizationComboBoxR.addItem("Clinical Researcher");
        }else if(ent.getEnterpriseType().equals("Review")){
            organizationComboBoxR.addItem("Review");
        }else if(ent.getEnterpriseType().equals("Inspection")){
            organizationComboBoxR.addItem("Manufacturer inspections");
        }else if(ent.getEnterpriseType().equals("Advertising")){
            organizationComboBoxR.addItem("Drug advertising");
        }
    }
    
    public void showSpecificRoles(String role){
        roleComboBoxR.removeAllItems();
        roleComboBoxR.addItem("New Role");
        if(role.equals("Research")){
            roleComboBoxR.addItem("Research Scientist");
            roleComboBoxR.addItem("Research lead");
        }else if(role.equals("Development")){
            roleComboBoxR.addItem("Manufacturing Analyst");
        }else if(role.equals("GLP Regulators")){
            roleComboBoxR.addItem("GLP Officer");
        }else if(role.equals("Clinical Researcher")){
            roleComboBoxR.addItem("Clinical researcher");        
        }else if(role.equals("Review")){
            roleComboBoxR.addItem("Medical Officer");
            roleComboBoxR.addItem("Toxicology Specialist");
        }else if (role.equals("Manufacturer inspections")){
            roleComboBoxR.addItem("Safety Inspector");
        }else if(role.equals("Drug advertising")){
            roleComboBoxR.addItem("Advertising Specialist");
        }                   
    }
    
    public void addResearchersLead(Employee emp){
        
       
       System.out.println("addResearchersLead called with employee: " + emp.getName());
    jComboBox1.removeAllItems();

    for (Employee em : empDir.getEmpDir()) {
        // Check if the employee is a Research Lead
        if ("Research Lead".equalsIgnoreCase(em.getRole())) {
            System.out.println("Adding Research Lead: " + em.getName());
            jComboBox1.addItem(em.getName());
        } else {
            System.out.println("Skipping: " + em.getName() + " (Role: " + em.getRole() + ")");
        }
    }
    }
    
        public void populateTableManufacturingAnalyst(Employee emp){
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        model.setRowCount(0);
        for (DevelopmentReport devRep : devRepDir.getDevRepDir()){
            if(devRep.getDevAssigned().equals(emp.getName())){
                
                String[] addToTable = {devRep.getReportID(), devRep.getDrugName(), devRep.getDate().toString(), devRep.getDiseaseTarget(), devRep.getReportTo()};
                model.addRow(addToTable);
            }
        }                
    }
        
    public void populateTableGTPOfficer(Employee emp){
        DefaultTableModel model = (DefaultTableModel) jTable5.getModel();
        model.setRowCount(0);
        //edit this to have if condition that helps populate data that is assigned to this specific enterprise. There is a variable that needs to be assigned when manufacturing analyst adds the manufacturign details.
        for(DevelopmentReport devRep: devRepDir.getDevRepDir()){
            
            String[] addToTable = {devRep.getReportID(), devRep.getDrugName(), devRep.getDate().toString(), devRep.getDiseaseTarget(), devRep.getReportTo()};
            model.addRow(addToTable);
        }
    }
    
    public void populateTableClinicalResearcher(Employee emp){
        DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
        model.setRowCount(0);
        for (ClinicalResearcherReport crR : clinicalresearchdir.getClinicalReportDir()){
            if (crR.getAssignedClinicalResearcher().equals(emp.getName())){
                String[] addToTable = {crR.getReportID(), crR.getDrugName(), crR.getDate().toString(), crR.getDiseaseTarget(), crR.getAssignedGLPOfficer()};
                System.out.println("THe officer is" + crR.getAssignedGLPOfficer());
                model.addRow(addToTable);                            
            }
        }
    }
    

    public void populatweTableMedicalOfficerHome(Employee emp){
        DefaultTableModel model = (DefaultTableModel) jTable7.getModel();
        model.setRowCount(0);
        for(MedicalReport med : mediRepp.getMediRep()){
            if (med.getToxicologySpecialist().equals(emp.getName())){
                String[] addToTable = {med.getReportID(), med.getDrugName(), med.getDate().toString(), med.getDiseaseTarget(), med.getToxicologySpecialist(), med.getFinalApproval()};
                model.addRow(addToTable);
            }
        }
    }
    public void populateAddSpecialistTable(Employee emp){
        DefaultTableModel model = (DefaultTableModel) AddSpecialistTable.getModel();
        model.setRowCount(0);
        for (ClinicalResearcherReport crR : clinicalresearchdir.getClinicalReportDir()){
            if (crR.getAssignedClinicalResearcher().equals(emp.getName())){
                String[] addToTable = {crR.getReportID(), crR.getDrugName(), crR.getDate().toString(), crR.getDiseaseTarget(), crR.getAssignedGLPOfficer()};
                model.addRow(addToTable);                            
            }
        }
    }
    
    
    public void addClinicalResearchers(Employee emp){
       System.out.println("addClinicalResearchers called with employee: " + emp.getName());
    jComboBox5.removeAllItems();

    for (Employee em : empDir.getEmpDir()) {
        // Check if the employee is a Clinical Researcher
        if ("Clinical Researcher".equalsIgnoreCase(em.getRole())) {
            System.out.println("Adding Clinical Researcher: " + em.getName());
            jComboBox5.addItem(em.getName());
        } else {
            System.out.println("Skipping: " + em.getName() + " (Role: " + em.getRole() + ")");
        }
    
               
            
        }
        
   
    }


    
    //Radiobtn
    private void maleRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleRadioButton1ActionPerformed
        gender = "Male";
    }//GEN-LAST:event_maleRadioButton1ActionPerformed

    private void femaleRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleRadioButton1ActionPerformed
        gender = "Female";
    }//GEN-LAST:event_femaleRadioButton1ActionPerformed

    private void othersRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_othersRadioButton1ActionPerformed
        gender = "Others";
    }//GEN-LAST:event_othersRadioButton1ActionPerformed

    private void numberTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberTextField1ActionPerformed

    private void organizationComboBoxRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationComboBoxRActionPerformed
        disableDropdownRole();
        String org = organizationComboBoxR.getSelectedItem().toString();
        showSpecificRoles(org);
    }//GEN-LAST:event_organizationComboBoxRActionPerformed

    private void cancelButtonRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonRActionPerformed
        PanelPaint(Login);
    }//GEN-LAST:event_cancelButtonRActionPerformed

    public void populateTableResearchScientist(Employee emp){
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        for (ResearchReport rr : repDir.getResearchReportdsDir()){
                if (rr.getResearchBy().toString().equals(emp.getName())){
                    String[] addToTable = {rr.getReportID(), rr.getDrugName(), rr.getDate().toString(), rr.getDiseaseTarget(), rr.getReportTo()};
                    model.addRow(addToTable);
                }
            }
    }
    
    public void populateTableRegulatoryHealthManager(Employee emp){
        DefaultTableModel model = (DefaultTableModel) jTable6.getModel();
        model.setRowCount(0);
        for (ClinicalResearcherReport crr: clinicalresearchdir.getClinicalReportDir()){
            String[] addToTable = {crr.getReportID(), crr.getDrugName(), crr.getDate().toString(), crr.getDiseaseTarget(), crr.getReportTo()};
            model.addRow(addToTable);
            }
        }
    
    
    public void populateTableResearchLead(Employee emp){
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        for(ResearchReport rr : repDir.getResearchReportdsDir()){
            if(rr.getReportTo().toString().equals(emp.getName())){
                
                String[] addToTable = {rr.getReportID(), rr.getDrugName(), rr.getDate().toString(), rr.getDiseaseTarget(), rr.getReportTo()};
                model.addRow(addToTable);
            }
        }
    }
    
        public void populateAdvertisingTable(Employee emp){
            DefaultTableModel model = (DefaultTableModel) AddSpecialistTable.getModel();
            model.setRowCount(0);
            for(InspectionReview irr:inspectRep.getInspectionRepo()){
                String[] addToTable = {irr.getReportID(), irr.getDrugName(), irr.getDate().toString(), irr.getDiseaseTarget(), irr.getReportTo()};
                model.addRow(addToTable);
            }
        }
    
        public void addToDistAndDos(ResearchReport RR, DevelopmentReport DR){
        addToDisAndDev(RR);
        DefaultListModel mod = new DefaultListModel();
        jTextField13.setText(DR.getDevAssigned());
        jTextField12.setText(DR.getDistribution());
        ArrayList<String> dosageList = DR.getDosage();
        
        /*for(int i = 0; i<dosageList.size(); i++){
            mod.addElement(i);
        }
        jList5.setModel(mod);*/
    }
        
    public void populateSafetyInspectorHome(Employee emp){
        DefaultTableModel model = (DefaultTableModel) jTable9.getModel();
        model.setRowCount(0);
        for(MedicalReport me:mediRepp.getMediRep()){
            if (me.getFinalApproval().equals("Approve")){
            String[] addToTable = {me.getReportID(), me.getDrugName(), me.getDate().toString(), me.getDiseaseTarget(), me.getToxicologySpecialist()};
            model.addRow(addToTable);
            System.out.println(me.getDrugName());
            }
        }
    }
        
    public void addToDisAndDev(ResearchReport RR){
        jLabel24.setText("Report ID: "+RR.getReportID());
        jTextField6.setText(RR.getDrugName());
        System.out.println("Report"+ RR.getDrugName());
        jTextField5.setText(RR.getDiseaseTarget());
        jTextField1.setText(RR.getResearchBy());
        jTextArea3.setText(RR.getDrugNotes());
        jLabel59.setText(RR.getReportTo());
        /*listOfComposition.removeAllElements();
        ArrayList<String> compList = RR.getComposition(); 
        for (int i = 0; i<compList.size(); i++){
            listOfComposition.addElement(i);
            
        }
        jList3.setModel(listOfComposition);*/
    }
        
    public void addMedicalOfficers(Employee emp){
        jComboBox6.removeAllItems();
        jComboBox6.addItem("None");
        for (Employee em : empDir.getEmpDir()){
            if (em.getEnterpriseName().equals(emp.getEnterpriseName()) && em.getOrganizationName().equals(emp.getOrganizationName()) && em.getRole().equals("Toxicology Specialist")){
                jComboBox6.addItem(em.getName());
            }
        }
    }
    
    public void addToFDAReport(ResearchReport RR, DevelopmentReport DR, ClinicalResearcherReport crr, MedicalReport MR){
        addToDisAndDev(RR);
        addToDistAndDos(RR, DR);
        addToClinicalTesting(RR, DR, crr);
        jTextField19.setText(MR.getToxicologySpecialist());
        jTextField20.setText(MR.getMedicalOfficer());
        jTextArea5.setText(MR.getToxinsFound());
        jLabel60.setText(MR.getFinalApproval());
    }
    
    public void addToClinicalTesting(ResearchReport RR, DevelopmentReport DR, ClinicalResearcherReport crr){
        addToDisAndDev(RR);
        addToDistAndDos(RR, DR);
        jTextField15.setText(crr.getAssignedGLPOfficer());
        jTextField18.setText(crr.getAssignedClinicalResearcher());
        jTextArea10.setText(crr.getDrugReaction());
        jTextArea11.setText(crr.getSideEffects());
    }
        
    
    public void viewReportAll(String reportNumber){
        SplitPanelPain(ResearchScientistViewReport);
        ResearchReport RR = new ResearchReport();
        DevelopmentReport devR = new DevelopmentReport();
        MedicalReport medR = new MedicalReport();
        ClinicalResearcherReport crRepo = new ClinicalResearcherReport();
        //listOfComposition.removeAllElements();
        for (ResearchReport rr : repDir.getResearchReportdsDir()){
            if (rr.getReportID().equals(reportNumber)){
                RR = rr;                      
            }
        }
        for(DevelopmentReport deRE: devRepDir.getDevRepDir()){
            if (deRE.getReportID().equals(reportNumber)){
                devR = deRE;            
            }
        }
        
        for (MedicalReport med: mediRepp.getMediRep()){
            if (med.getReportID().equals(reportNumber)){
                medR = med;            
            }
        }
        for (ClinicalResearcherReport crrep: clinicalresearchdir.getClinicalReportDir()){
            if (crrep.getReportID().equals(reportNumber)){
                crRepo = crrep;       
            }
        }
        addToDisAndDev(RR);
        if(medR != null){
            addToFDAReport(RR, devR, crRepo, medR);
        }
        
        if(crRepo != null){
            addToClinicalTesting(RR, devR, crRepo);
        }else if (devR != null){
            addToDistAndDos(RR, devR);
        }
        else if (RR != null){
            addToDisAndDev(RR);
        }
        
    }
    
    private void submitButtonRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonRActionPerformed
        //Connection con = conForSQL.connectoDB();
        Employee emp = empDir.addEmployee();
        String name = firstnameTextField1.getText() + " "+middlenameTextField1.getText() + " "+lastnameTextField1.getText();
        emp.setName(name);
        emp.setAge(Integer.valueOf(ageTextField.getText()));
        emp.setDateofBirth(DateofBirthChooser1.getDate().toString());
        emp.setUsername(usernameTextFieldR.getText());
        emp.setPassword(String.valueOf(jPasswordField1.getPassword()));
        emp.setGender(gender);
        emp.setPhoneNumber(Integer.valueOf(numberTextField1.getText()));
        emp.setMailID(emailIDTextField1.getText());
        emp.setAddress(addressTextArea1.getText());
        emp.setZipcode(Integer.valueOf(zipcodeTextField1.getText()));
        emp.setEnterpriseName(enterpriseComboBoxR.getSelectedItem().toString());
        emp.setOrganizationName(organizationComboBoxR.getSelectedItem().toString());
        emp.setRole(roleComboBoxR.getSelectedItem().toString());
        System.out.println(roleComboBoxR.getSelectedItem().toString());
        PanelPaint(Login);
        try {
            MailHandling mail = new MailHandling(emp.getMailID(), "Welcome to organization", "We are happy to have you abord.");
        } catch (MessagingException ex) {
            Logger.getLogger(drugLifeCycle.class.getName()).log(Level.SEVERE, null, ex);
        }

        try{
            conForSQL.addEmployeeToDB(conn, emp);
        }catch (SQLException e){
            System.out.println("Error in adding employee. Detected "+e);
        }
    }//GEN-LAST:event_submitButtonRActionPerformed

    private void enterpriseComboBoxRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseComboBoxRActionPerformed
        disableDropdownOrganization();
        String org = enterpriseComboBoxR.getSelectedItem().toString();
        showSpecificOrganization(org);
    }//GEN-LAST:event_enterpriseComboBoxRActionPerformed

    private void logoutButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButton1ActionPerformed
        PanelPaint(Login);
    }//GEN-LAST:event_logoutButton1ActionPerformed

    private void addEnterpriseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEnterpriseButtonActionPerformed
        Employee loggedINEmployee = empDir.sendParticularUser(usernameTextField1.getText(), String.valueOf(passwordField1.getPassword()));
        loggedINEmployee.setEnterpriseName(firstLoginEnterpriseNameTextField.getText());
        loggedINEmployee.setEnterpriseType(firstLoginEnterpriseTypeComboBox.getSelectedItem().toString());
        //loggedINEmployee.setRole(firstLoginEnterpriseMyRoleTextField.getText());
        //loggedINEmployee.setOrganizationName(firstLoginEnterpriseMyOrganizationTextField.getText());
        JOptionPane.showMessageDialog(this, "Enterprise created. Please re-login.");
        enterpriseComboBoxR.addItem(firstLoginEnterpriseNameTextField.getText());
        //organizationComboBoxR.addItem(firstLoginEnterpriseMyOrganizationTextField.getText());
    }//GEN-LAST:event_addEnterpriseButtonActionPerformed

    private void firstLoginOrganizationAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstLoginOrganizationAddButtonActionPerformed
        Employee loggedINEmployee = empDir.sendParticularUser(usernameTextField1.getText(), String.valueOf(passwordField1.getPassword()));
        loggedINEmployee.setOrganizationName(firstLoginOrganizationNameTextField.getText());
        loggedINEmployee.setRole(firstLoginOrganizationRoleTextField1.getText());
        organizationComboBoxR.addItem(firstLoginOrganizationNameTextField.getText());
        roleComboBoxR.addItem(firstLoginOrganizationRoleTextField1.getText());
    }//GEN-LAST:event_firstLoginOrganizationAddButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed

        Employee empWorkSpace = empDir.sendParticularUser(usernameTextField1.getText(), String.valueOf(passwordField1.getPassword()));
        System.out.println("Role: " + empWorkSpace.getRole());
        System.out.println("Enterprise: " + empWorkSpace.getEnterpriseName());
        System.out.println("Organization: " + empWorkSpace.getOrganizationName());
        if (empWorkSpace.getEnterpriseName().toString().equals("New enterprise")){
            PanelPaint(Workspace);
            SplitPanelPain(firstLoginEnterprise);
        }else if (empWorkSpace.getOrganizationName().toString().equals("New organization")){
            PanelPaint(Workspace);
            SplitPanelPain(firstLoginOrganization);
        }if (empWorkSpace.getRole().equals("Research Scientist")){
            PanelPaint(Workspace);
            SplitPanelPain(ResearchScientistHome);
            populateTableResearchScientist(empWorkSpace);
            addResearchersLead(empWorkSpace);
            ResearchReportPage1ResearchBy.setText(empWorkSpace.getName());
        }
        
       if (empWorkSpace.getRole().trim().equalsIgnoreCase("Research Lead")) {
       PanelPaint(Workspace);
       SplitPanelPain(ResearchLeadHome);
    populateTableResearchLead(empWorkSpace);
            if (ResearchLeadHome == null) {
    System.out.println("ResearchLeadHome panel is null.");
}
        
    }//GEN-LAST:event_loginButtonActionPerformed

        if (empWorkSpace.getRole().equals("Manufacturing Analyst")){
            PanelPaint(Workspace);
            SplitPanelPain(ManufacturingAnalystHome);
            populateTableManufacturingAnalyst(empWorkSpace);
        }if(empWorkSpace.getRole().equals("GLP Officer")){
            PanelPaint(Workspace);
            SplitPanelPain(GLPOfficersHome);
            populateTableGTPOfficer(empWorkSpace);
            addClinicalResearchers(empWorkSpace);
          
            jTextArea6.setEnabled(false);
            jTextArea7.setEnabled(false);
            usernameTextFieldR5.setEnabled(true);
            usernameTextFieldR1.setEnabled(true);
            jComboBox5.setEnabled(true);
        }if(empWorkSpace.getRole().equals("Clinical researcher")){
            PanelPaint(Workspace);
            SplitPanelPain(ClinicalResearchers);
            populateTableClinicalResearcher(empWorkSpace);
            jTextArea6.setEnabled(true);
            jTextArea7.setEnabled(true);
            usernameTextFieldR5.setEnabled(false);
            usernameTextFieldR1.setEnabled(false);
            jComboBox5.setEnabled(false);
            jComboBox5.setSelectedItem(empWorkSpace.getName());
        }
        if(empWorkSpace.getRole().equals("Medical Officer")){
            PanelPaint(Workspace);
            SplitPanelPain(RegulatoryHealthManager);
            populateTableRegulatoryHealthManager(empWorkSpace);
            addMedicalOfficers(empWorkSpace);
        }
        if (empWorkSpace.getRole().equals("Toxicology Specialist")){
            PanelPaint(Workspace);
            SplitPanelPain(MedicalOfficerHome);
            populatweTableMedicalOfficerHome(empWorkSpace);
            
        }
        if (empWorkSpace.getRole().equals("Advertising Specialist")){
            PanelPaint(Workspace);
            SplitPanelPain(AdvertisingSpecialist); 
            populateAdvertisingTable(empWorkSpace);
        }
        
       
        if (empWorkSpace.getRole().equals("Safety Inspector")){
            PanelPaint(Workspace);
            SplitPanelPain(SafetyInspectorOfficer); 
            populateSafetyInspectorHome(empWorkSpace);
            
        }
    }
    
    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        PanelPaint(Registration);
        //enterpriseComboBoxR.removeAllItems();

    }//GEN-LAST:event_registerButtonActionPerformed

    private void ViewReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReportActionPerformed
        if(jTable1.getSelectedRow() != -1){
            cardPrevious = ResearchScientistHome;
            String ID = jTable1.getValueAt(0, 0).toString();
            viewReportAll(ID);
            ResearchReport rr = new ResearchReport();
            for (ResearchReport rr1: repDir.getResearchReportdsDir()){
                if (rr1.getReportID().equals(ID)){
                    rr = rr1;                    
                }
            }
            IDleadAssign.setText(rr.getReportID());
            NameleadAssign.setText(rr.getDrugName());
            targetleadAssign.setText(rr.getDiseaseTarget());
            dateleadAssign.setText(rr.getDate().toString());
            jTextArea4.setText(rr.getDrugNotes());
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select a report to view.");
        }
    }//GEN-LAST:event_ViewReportActionPerformed

    private void AddReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddReportActionPerformed
        SplitPanelPainReports(ResearchScientistReport);
    }//GEN-LAST:event_AddReportActionPerformed

    private void viewReportResearchLeadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewReportResearchLeadActionPerformed
        if (jTable2.getSelectedRow() != -1){
            String ID = jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString();
            viewReportAll(ID);
            cardPrevious = ResearchLeadHome;
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select a report to view.");
        }
    }//GEN-LAST:event_viewReportResearchLeadActionPerformed

    private void researchLeadApprovalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_researchLeadApprovalActionPerformed
    try {
        // Check if a row is selected in jTable2
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row in the table.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validate data in jTable1
        if (jTable1.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "No data available in the table.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (jTable1.getColumnCount() <= 0) {
            JOptionPane.showMessageDialog(this, "Invalid table structure.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Retrieve ID from the selected row
        Object idObject = jTable1.getValueAt(selectedRow, 0);
        if (idObject == null) {
            JOptionPane.showMessageDialog(this, "Selected row has no valid ID.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String ID = idObject.toString();

        // Show Research Lead Approval Panel
        SplitPanelPain(ResearchLeadApproval);

        // Fetch the corresponding research report
        ResearchReport ResRep = null;
        for (ResearchReport rr : repDir.getResearchReportdsDir()) {
            if (rr.getReportID() != null && rr.getReportID().equals(ID)) {
                ResRep = rr;
                break;
            }
        }

        if (ResRep == null) {
            JOptionPane.showMessageDialog(this, "No matching research report found for the selected ID.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Populate the Research Lead Approval form
        IDleadAssign.setText(ResRep.getReportID());
        NameleadAssign.setText(ResRep.getDrugName());
        targetleadAssign.setText(ResRep.getDiseaseTarget());
        dateleadAssign.setText(ResRep.getDate() != null ? ResRep.getDate().toString() : "N/A");
        jTextArea4.setText(ResRep.getDrugNotes() != null ? ResRep.getDrugNotes() : "");
    } catch (Exception e) {
        // Log and show any unexpected errors
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_researchLeadApprovalActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
                                       
    // Clear the dropdown
    jComboBox3.removeAllItems();
    
    // Add a default option
   
    
    // Connect to the database
    backendDBConnection dbConnection = new backendDBConnection();
    Connection conn = dbConnection.connectoDB();
    
    if (conn != null) {
        try {
            // Query to fetch Manufacturing Analysts
            String query = "SELECT Name FROM Employee WHERE Role = 'Manufacturing Analyst'";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            
            // Populate dropdown
            while (rs.next()) {
                String analystName = rs.getString("Name");
                System.out.println("Adding Manufacturing Analyst: " + analystName); // Debug Log
                jComboBox3.addItem(analystName);
            }
            
            // Close resources
            rs.close();
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error fetching Manufacturing Analysts: " + e.getMessage(),
                                          "Database Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                conn.close();
            } catch (SQLException e) {
                System.out.println("Error closing connection: " + e.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Unable to connect to the database.",
                                      "Connection Error", JOptionPane.ERROR_MESSAGE);
    }
    
    // Refresh the dropdown
    jComboBox3.repaint();
    jComboBox3.revalidate();
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void AssignToDevDecsionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignToDevDecsionActionPerformed
        String repID = IDleadAssign.getText();
        ResearchReport ResRep = new ResearchReport();
        for (ResearchReport rr: repDir.getResearchReportdsDir()){
            if (rr.getReportID().equals(repID)){
                ResRep = rr;            
            }
        }
        DevelopmentReport devRep = devRepDir.addDevRep();
        devRep.setReportID(ResRep.getReportID());
        devRep.setComposition(ResRep.getComposition());
        devRep.setResearchBy(ResRep.getResearchBy());
        devRep.setDrugName(ResRep.getDrugName());
        devRep.setDiseaseTarget(ResRep.getDiseaseTarget());
        devRep.setDate(ResRep.getDate());
        devRep.setDrugNotes(ResRep.getDrugNotes());
        devRep.setReportTo(ResRep.getReportTo());
        devRep.setDevAssigned(jComboBox3.getSelectedItem().toString());
        devRep.setEnterpriseName(ResRep.getEnterpriseName()); //This line needs to be edited.
        SplitPanelPain(ResearchLeadHome);
        try{
            conForSQL.addDevelopmentReport(conn, devRep);
        }catch(SQLException e){
            System.out.println("Error in adding the development report. Occured due to: "+e);
        }
    }//GEN-LAST:event_AssignToDevDecsionActionPerformed

    private void CancelAssigningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelAssigningActionPerformed
        SplitPanelPain(ResearchLeadHome);
    }//GEN-LAST:event_CancelAssigningActionPerformed

    private void TabbedPaneNext1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TabbedPaneNext1ActionPerformed
        ResearchScientistReport.setSelectedIndex(1);
    }//GEN-LAST:event_TabbedPaneNext1ActionPerformed

    private void TabbedPaneNext2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TabbedPaneNext2ActionPerformed
        ResearchScientistReport.setSelectedIndex(2);
        summaryResearchReport();
    }//GEN-LAST:event_TabbedPaneNext2ActionPerformed

    private void addChemicalCompositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addChemicalCompositionActionPerformed
        listOfComposition.addElement(ResearchScientistReportPage2ChemicalTextField.getText() + " " + ResearchScientistReportPage2Quantity.getText() + " "+jLabel11.getText());
        jList1.setModel(listOfComposition);
        jList2.setModel(listOfComposition);
    }//GEN-LAST:event_addChemicalCompositionActionPerformed

    private void ResearchScientistReportPage2QuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResearchScientistReportPage2QuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResearchScientistReportPage2QuantityActionPerformed

    private void deleteChemicalCompositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteChemicalCompositionActionPerformed
        int row1 = jList1.getSelectedIndex();
        if(row1!=-1){
            listOfComposition.removeElementAt(row1);
        }
    }//GEN-LAST:event_deleteChemicalCompositionActionPerformed

    private void ResearchReportSubmitReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResearchReportSubmitReportActionPerformed
        Employee loggedINEmployee = empDir.sendParticularUser(usernameTextField1.getText(), String.valueOf(passwordField1.getPassword()));
        ResearchReport rr = repDir.addNewReport(loggedINEmployee);
        rr.setResearchBy(jLabel13.getText());
        rr.setDrugName(jLabel15.getText());
        rr.setDiseaseTarget(jLabel20.getText());
        rr.setDate(jDateChooser1.getDate().toString());
        rr.setDrugNotes(jTextArea2.getText());
        rr.setReportTo(jLabel23.getText());
        rr.setReportID(resRepIDGen());
        rr.setEnterpriseName(loggedINEmployee.getEnterpriseName());
        ArrayList<String> comp = new ArrayList<>();
        for (int i=0; i<jList2.getModel().getSize(); i++){
            comp.add(jList2.getModel().getElementAt(i));
        }
        rr.setComposition(comp);
        populateTableResearchScientist(loggedINEmployee);
        SplitPanelPain(ResearchScientistHome);
        //Connection con = conForSQL.connectoDB();
        try{
            conForSQL.addResearchReport(conn, rr);
        }catch(SQLException e){
            System.out.println("Unable to add the report to database due to: "+e);
        } 
        
    }//GEN-LAST:event_ResearchReportSubmitReportActionPerformed

    private void ResearchReportCancelReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResearchReportCancelReportActionPerformed
        SplitPanelPain(ResearchScientistHome);
    }//GEN-LAST:event_ResearchReportCancelReportActionPerformed

    private void ResearchScientistReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResearchScientistReportMouseClicked
        summaryResearchReport();
    }//GEN-LAST:event_ResearchScientistReportMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SplitPanelPain(AddManufacturingDetails);
        if(jTable3.getSelectedRow() != -1){
            DevelopmentReport Devrep = new DevelopmentReport();
            String ID =  jTable3.getValueAt(jTable3.getSelectedRow(), 0).toString();
            String datte = jTable3.getValueAt(jTable3.getSelectedRow(), 2).toString();
            //Date da = datte.toDate();
            for (DevelopmentReport devRep: devRepDir.getDevRepDir()){
                if (devRep.getReportID().equals(ID)){
                    Devrep = devRep;
                }
            }
            jLabel40.setText(Devrep.getReportID());
            jLabel41.setText(Devrep.getResearchBy());
            jLabel42.setText(Devrep.getReportTo());

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jTable3.getSelectedRow() != -1){
            String ID = jTable3.getValueAt(jTable3.getSelectedRow(), 0).toString();
            viewReportAll(ID);
            cardPrevious = ManufacturingAnalystHome;
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select a report to view.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        listOfDosage.addElement("For age: "+jTextField3.getText() + ", Quantity: "+jTextField4.getText() + " ml/gm");
        jList4.setModel(listOfDosage);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int row = jList4.getSelectedIndex();
        if (row != -1){
            listOfDosage.removeElementAt(row);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        DevelopmentReport devrep = new DevelopmentReport();
        String ID = jLabel40.getText();
        for(DevelopmentReport dr: devRepDir.getDevRepDir()){
            if (dr.getReportID().equals(ID)){
                devrep = dr;
            }
        }
        devrep.setDistribution(jTextField2.getText());
        ArrayList<String> temp = new ArrayList<>();
        for (int i = 0; i<jList4.getModel().getSize(); i++){
            temp.add(jList4.getModel().getElementAt(i));
        }
        devrep.setDosage(temp);
        devrep.setStatus("Approved for clinical");
        SplitPanelPain(ManufacturingAnalystHome);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void viewReportBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewReportBackButtonActionPerformed
        SplitPanelPain(cardPrevious);
    }//GEN-LAST:event_viewReportBackButtonActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jTextField15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField15ActionPerformed

    private void jTextField18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField18ActionPerformed

    private void jTextField19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField19ActionPerformed

    private void jTextField20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField20ActionPerformed

    private void ViewReport2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReport2ActionPerformed
        int row = jTable4.getSelectedRow();
        if(row != -1){
            SplitPanelPain(CreateTrail);
        }
        
        
    }//GEN-LAST:event_ViewReport2ActionPerformed

    private void ViewReport1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReport1ActionPerformed
        // TODO add your handling code here:
        
        if (jTable5.getSelectedRow() != -1){
            String ID = jTable5.getValueAt(jTable5.getSelectedRow(), 0).toString();
            viewReportAll(ID);
            cardPrevious = GLPOfficersHome;
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select a report to view.");
        }
      
    }//GEN-LAST:event_ViewReport1ActionPerformed

    private void createTrailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTrailActionPerformed
          int row = jTable5.getSelectedRow();
        cardPrevious = GLPOfficersHome;
        if(row != -1){
            String ID = jTable5.getValueAt(row, 0).toString();
            SplitPanelPain(CreateTrail);
            DevelopmentReport devrep = new DevelopmentReport();
            for(DevelopmentReport devRe:devRepDir.getDevRepDir()){
                if (devRe.getReportID().equals(ID)){
                    devrep = devRe;
                }
            }createTrailData(devrep);
        }

    }//GEN-LAST:event_createTrailActionPerformed

   public void createTrailData(DevelopmentReport dr){
        Employee loggedINEmployee = empDir.sendParticularUser(usernameTextField1.getText(), String.valueOf(passwordField1.getPassword()));
        ClinicalResearcherReport crr = clinicalresearchdir.addTrails();
        crr.setDrugName(dr.getDrugName());
        crr.setComposition(dr.getComposition());
        crr.setDate(dr.getDate());
        crr.setDiseaseTarget(dr.getDiseaseTarget());
        crr.setReportID(dr.getReportID());
        crr.setResearchBy(dr.getResearchBy());
        crr.setReportTo(dr.getReportTo());
        crr.setEnterpriseName(dr.getEnterpriseName());
        crr.setReportID(dr.getReportID());
        crr.setDosage(dr.getDosage());
        crr.setDistribution(dr.getDistribution());
        crr.setDevAssigned(dr.getDevAssigned());
        crr.setAssignedGLPOfficer(loggedINEmployee.getName());
        crr.setAssignedClinicalResearcher(jComboBox5.getSelectedItem().toString());
        System.out.println(crr.getAssignedClinicalResearcher());
        usernameTextFieldR5.setText(crr.getDrugName());
        jLabel66.setText(crr.getReportID());
        DefaultListModel dosage = new DefaultListModel();
        ArrayList<String> dos = crr.getDosage();
        dosage.removeAllElements();
        for (int i = 0; i<crr.getDosage().size(); i++){
            dosage.addElement(dos.get(i));
        }
        jList7.setModel(dosage);
        try{
            conForSQL.addClinicalResearcherReport(conn, crr);
        }catch(SQLException e){
            System.out.println("Error in adding clinical research report. Occured due to: " + e);
        }
    }
    
    
    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        SplitPanelPain(GLPOfficersHome);
    }//GEN-LAST:event_cancelActionPerformed

    private void usernameTextFieldR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextFieldR1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextFieldR1ActionPerformed

    private void usernameTextFieldR5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextFieldR5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextFieldR5ActionPerformed

    private void ViewReport3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReport3ActionPerformed
         
       if (jTable6.getSelectedRow() != -1){
            String ID = jTable6.getValueAt(jTable6.getSelectedRow(), 0).toString();
            viewReportAll(ID);
            cardPrevious = MedicalOfficerHome;
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select a report to view.");
        }
    }//GEN-LAST:event_ViewReport3ActionPerformed

    private void AddReport1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddReport1ActionPerformed
        int row = jTable6.getSelectedRow();
        cardPrevious = RegulatoryHealthManager;
        if (row != -1){
            String ID = jTable6.getValueAt(row, 0).toString();
            SplitPanelPain(AddToxicologyReport);
            ClinicalResearcherReport crR = new ClinicalResearcherReport();
            for (ClinicalResearcherReport cr: clinicalresearchdir.getClinicalReportDir()){
                if(cr.getReportID().equals(ID)){
                    crR = cr;
                }
            }
            listOfComposition.removeAllElements();
            ArrayList<String> compForToxicology = crR.getComposition();
            for (int i = 0; i < compForToxicology.size(); i++){
                listOfComposition.addElement(compForToxicology.get(i));
            }
            jLabel75.setText(ID);
            jList8.setModel(listOfComposition);
            jTextArea9.setText(crR.getSideEffects());
        }
    }//GEN-LAST:event_AddReport1ActionPerformed

    private void ViewReport4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReport4ActionPerformed
         if (jTable7.getSelectedRow() != -1){
            String ID = jTable7.getValueAt(jTable7.getSelectedRow(), 0).toString();
            viewReportAll(ID);
            cardPrevious = MedicalOfficerHome;
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select a report to view.");
        }
    }//GEN-LAST:event_ViewReport4ActionPerformed

    private void AddReport2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddReport2ActionPerformed
        int row = jTable7.getSelectedRow();
        Employee loggedINEmployee = empDir.sendParticularUser(usernameTextField1.getText(), String.valueOf(passwordField1.getPassword()));
        //cardPrevious = RegulatoryHealthManager;
        if (row != -1){
            String ID = jTable7.getValueAt(row, 0).toString();
            MedicalReport med = new MedicalReport();
            for(MedicalReport me:mediRepp.getMediRep()){
                if(me.getReportID().equals(ID)){
                    med = me;
                }
            }med.setFinalApproval("Approve");
            populatweTableMedicalOfficerHome(loggedINEmployee);
            try{
                conForSQL.updateMedicalReport(conn, med);
            }catch(SQLException e){
                System.out.println("Error with updating the medical report status in the database. Error: "+ e);
            }
        }
        
    }//GEN-LAST:event_AddReport2ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void AssignToDevDecsion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignToDevDecsion1ActionPerformed
        Employee loggedINEmployee = empDir.sendParticularUser(usernameTextField1.getText(), String.valueOf(passwordField1.getPassword()));
        ClinicalResearcherReport cr = clinicalresearchdir.sendSpecificReport(jLabel75.getText());
        System.out.println(cr.getDate());
        //addToMediReport(cr);
        MedicalReport medi = mediRepp.addMediReport();
        medi.setReportID(cr.getReportID());
        medi.setEnterpriseName(loggedINEmployee.getEnterpriseName());
        medi.setDrugName(cr.getDrugName());
        medi.setDate(cr.getDate());
        medi.setDiseaseTarget(cr.getDiseaseTarget());
        medi.setReportTo(cr.getName());
        medi.setFinalApproval("Under review");
        medi.setToxicologySpecialist(jComboBox6.getSelectedItem().toString());
        medi.setMedicalOfficer(loggedINEmployee.getName());
        medi.setToxinsFound(jTextArea8.getText());
        SplitPanelPain(RegulatoryHealthManager);
        addMD2DB(conn, medi);
    }//GEN-LAST:event_AssignToDevDecsion1ActionPerformed
    
    public void addMD2DB(Connection conn, MedicalReport medi){
       try{
        conForSQL.addMedicalReport(conn, medi);
       }catch(SQLException e){
           System.out.println("Error with adding medical report to database." + e);
       }
    }
    
    private void CancelAssigning1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelAssigning1ActionPerformed
        SplitPanelPain(cardPrevious);
    }//GEN-LAST:event_CancelAssigning1ActionPerformed

    private void AddReport2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddReport2MouseClicked
        
    }//GEN-LAST:event_AddReport2MouseClicked

    private void AssignToDevDecsion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignToDevDecsion3ActionPerformed
        addAdvertisingData();
    }//GEN-LAST:event_AssignToDevDecsion3ActionPerformed

    public void addAdvertisingData(){
        Employee loggedINEmployee = empDir.sendParticularUser(usernameTextField1.getText(), String.valueOf(passwordField1.getPassword()));
        int row = AddSpecialistTable.getSelectedRow();
        AddAdvertising data = addDir.addAdvertisingData();
        data.setReportID(AddSpecialistTable.getValueAt(row, 0).toString());
        data.setDrugName(AddSpecialistTable.getValueAt(row, 1).toString());
        data.setDiseaseTarget(AddSpecialistTable.getValueAt(row, 3).toString());
        data.setReportTo(loggedINEmployee.getName());
        data.setAdvertisingInfo(jTextArea12.getText());
        data.setName(loggedINEmployee.getName());
        
        try{
            conForSQL.addToAdvertisingTable(conn, data);
        }catch(SQLException e){
            System.out.println("Error in adding data to advertising table. Error: "+e);
        }
    }
    
    private void CancelAssigning3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelAssigning3ActionPerformed
    
        SplitPanelPain(AdvertisingSpecialist );
    }//GEN-LAST:event_CancelAssigning3ActionPerformed

    private void AssignToDevDecsion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignToDevDecsion2ActionPerformed
       if(AddSpecialistTable.getSelectedRow() != -1){
            SplitPanelPain(AddAdvertising);
            
       }
    }//GEN-LAST:event_AssignToDevDecsion2ActionPerformed

    private void roleComboBoxRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleComboBoxRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleComboBoxRActionPerformed

    private void AssignToDevDecsion5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignToDevDecsion5ActionPerformed
        int row = jTable9.getSelectedRow();
        if(row != -1){
            SplitPanelPain(InspectionVisit);
            jLabel95.setText(jTable9.getValueAt(row, 0).toString());
        }
    }//GEN-LAST:event_AssignToDevDecsion5ActionPerformed

    private void AssignToDevDecsion4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignToDevDecsion4ActionPerformed
        InspectionReview ir = inspectRep.addInspectionReport();
        MedicalReport md = mediRepp.sendSpecificMedicalReport(jLabel95.getText());
        Employee loggedINEmployee = empDir.sendParticularUser(usernameTextField1.getText(), String.valueOf(passwordField1.getPassword()));
        ir.setReportID(md.getReportID());
        ir.setEnterpriseName(loggedINEmployee.getEnterpriseName());
        ir.setName(loggedINEmployee.getName());
        ir.setDrugName(md.getDrugName());
        ir.setDate(md.getDate());
        ir.setDiseaseTarget(md.getDiseaseTarget());
        ir.setInspectionType(inspectiontype);
        ir.setInspectionDate(jDateChooser2.getDate().toString());
        ir.setInspectionRemarks(jTextArea13.getText());
        ir.setInspectionResult(inspectionresult);
        SplitPanelPain(SafetyInspectorOfficer);
        try{
            conForSQL.addInspectionReport(conn, ir);
        }catch(SQLException e){
            System.out.println("Error with adding the inspection report to the databaese. Error: "+e);
        }
    }//GEN-LAST:event_AssignToDevDecsion4ActionPerformed

    private void CancelAssigning4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelAssigning4ActionPerformed
        SplitPanelPain(InspectionVisit);
    }//GEN-LAST:event_CancelAssigning4ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        inspectionresult = "Fail";
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        inspectiontype = "Due to problem";
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int row = jTable7.getSelectedRow();
        Employee loggedINEmployee = empDir.sendParticularUser(usernameTextField1.getText(), String.valueOf(passwordField1.getPassword()));
        //cardPrevious = RegulatoryHealthManager;
        if (row != -1){
            String ID = jTable7.getValueAt(row, 0).toString();
            MedicalReport med = new MedicalReport();
            for(MedicalReport me:mediRepp.getMediRep()){
                if(me.getReportID().equals(ID)){
                    med = me;
                }
            }med.setFinalApproval("Rejected");
            populatweTableMedicalOfficerHome(loggedINEmployee);
            try{
                conForSQL.updateMedicalReport(conn, med);
            }catch(SQLException e){
                System.out.println("Error with updating the medical report status in the database. Error: "+ e);
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        inspectiontype = "Routine";
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
       inspectionresult = "Pass";
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void firstnameTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstnameTextField1KeyReleased
        String convention = "[a-zA-Z]{0,30}$";
        Pattern ptt = Pattern.compile(convention);
        Matcher match = ptt.matcher(firstnameTextField1.getText());
        if(!match.matches()){
            nameError.setText("ERROR: First name should contain letters");
            submitButtonR.setEnabled(false);
    }
        else {
            nameError.setText("");
            submitButtonR.setEnabled(true);
                }
    }//GEN-LAST:event_firstnameTextField1KeyReleased

    private void middlenameTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_middlenameTextField1KeyReleased
        String convention = "[a-zA-Z]{0,30}$";
        Pattern ptt = Pattern.compile(convention);
        Matcher match = ptt.matcher(middlenameTextField1.getText());
        if(!match.matches()){
            nameError.setText("ERROR: Middle name should contain letters");
            submitButtonR.setEnabled(false);
    }
        else {
            nameError.setText("");
            submitButtonR.setEnabled(true);
                }
    }//GEN-LAST:event_middlenameTextField1KeyReleased

    private void lastnameTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastnameTextField1KeyReleased
         String convention = "[a-zA-Z]{0,30}$";
        Pattern ptt = Pattern.compile(convention);
        Matcher match = ptt.matcher(lastnameTextField1.getText());
        if(!match.matches()){
            nameError.setText("ERROR: Last name should contain letters");
            submitButtonR.setEnabled(false);
    }
        else {
            nameError.setText("");
            submitButtonR.setEnabled(true);
                }
    }//GEN-LAST:event_lastnameTextField1KeyReleased

    private void numberTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberTextField1KeyReleased
       String convention = "[0-9]{0,10}$";
        Pattern ptt = Pattern.compile(convention);
        Matcher match = ptt.matcher(numberTextField1.getText());
        if(!match.matches()){
            nameError.setText("ERROR: Phone should have 10 numbers only.");
            submitButtonR.setEnabled(false);  
    }
        else {
            nameError.setText("");
             submitButtonR.setEnabled(true);
                }
    }//GEN-LAST:event_numberTextField1KeyReleased

    private void emailIDTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailIDTextField1KeyReleased
       String convention = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        Pattern ptt = Pattern.compile(convention);
        Matcher match = ptt.matcher(emailIDTextField1.getText());
        if(!match.matches()){
            nameError.setText("ERROR: Enter valid email ID");
            submitButtonR.setEnabled(false);  
    }
        else {
            nameError.setText("");
             submitButtonR.setEnabled(true);
                }

    }//GEN-LAST:event_emailIDTextField1KeyReleased

    private void zipcodeTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zipcodeTextField1KeyReleased
        String convention = "^[0-9]{5}(?:-[0-9]{4})?$";
        Pattern ptt = Pattern.compile(convention);
        Matcher match = ptt.matcher(zipcodeTextField1.getText());
        if(!match.matches()){
            nameError.setText("ERROR: Zip Code should have 5 numbers");
            submitButtonR.setEnabled(false);  
    }
        else {
            nameError.setText("");
             submitButtonR.setEnabled(true);
                }
    }//GEN-LAST:event_zipcodeTextField1KeyReleased

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jTextField9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyReleased
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String search = jTextField9.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        
        tr.setRowFilter(RowFilter.regexFilter(jTextField9.getText().trim()));   
        
    }//GEN-LAST:event_jTextField9KeyReleased

    private void ResearchReportCancelReport1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResearchReportCancelReport1ActionPerformed
         SplitPanelPain(ResearchScientistHome);
    }//GEN-LAST:event_ResearchReportCancelReport1ActionPerformed

    private void ResearchReportCancelReport2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResearchReportCancelReport2ActionPerformed
         SplitPanelPain(ResearchScientistHome);
    }//GEN-LAST:event_ResearchReportCancelReport2ActionPerformed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed

    private void jTextField10KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyReleased
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        String search = jTextField10.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        jTable2.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        
        tr.setRowFilter(RowFilter.regexFilter(jTextField10.getText().trim()));
    }//GEN-LAST:event_jTextField10KeyReleased

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jTextField11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyReleased
        
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        String search = jTextField11.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        jTable3.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        
        tr.setRowFilter(RowFilter.regexFilter(jTextField11.getText().trim()));
    }//GEN-LAST:event_jTextField11KeyReleased

    private void jTextField14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14ActionPerformed

    private void jTextField14KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField14KeyReleased
       DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
        String search = jTextField14.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        jTable4.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        
        tr.setRowFilter(RowFilter.regexFilter(jTextField14.getText().trim()));
    }//GEN-LAST:event_jTextField14KeyReleased

    private void jTextField16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField16ActionPerformed
     
    }//GEN-LAST:event_jTextField16ActionPerformed

    private void jTextField16KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField16KeyReleased
         DefaultTableModel model = (DefaultTableModel) jTable5.getModel();
        String search = jTextField16.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        jTable5.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        
        tr.setRowFilter(RowFilter.regexFilter(jTextField16.getText().trim()));
    }//GEN-LAST:event_jTextField16KeyReleased

    private void jTextField17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField17ActionPerformed

    private void jTextField17KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField17KeyReleased
      DefaultTableModel model = (DefaultTableModel) jTable6.getModel();
        String search = jTextField17.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        jTable6.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        
        tr.setRowFilter(RowFilter.regexFilter(jTextField17.getText().trim()));
    }//GEN-LAST:event_jTextField17KeyReleased

    private void jTextField21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField21ActionPerformed

    private void jTextField21KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField21KeyReleased
         DefaultTableModel model = (DefaultTableModel) jTable7.getModel();
        String search = jTextField21.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        jTable7.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        
        tr.setRowFilter(RowFilter.regexFilter(jTextField21.getText().trim()));
    }//GEN-LAST:event_jTextField21KeyReleased

    private void jTextField22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField22ActionPerformed

    private void jTextField22KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField22KeyReleased
       DefaultTableModel model = (DefaultTableModel) AddSpecialistTable.getModel();
        String search = jTextField22.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        AddSpecialistTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        
        tr.setRowFilter(RowFilter.regexFilter(jTextField22.getText().trim()));
    }//GEN-LAST:event_jTextField22KeyReleased

    private void jTextField27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField27ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField27ActionPerformed

    private void jTextField27KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField27KeyReleased
      DefaultTableModel model = (DefaultTableModel) jTable9.getModel();
        String search = jTextField27.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        jTable9.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        
        tr.setRowFilter(RowFilter.regexFilter(jTextField27.getText().trim()));
    }//GEN-LAST:event_jTextField27KeyReleased

    private void createTrail2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTrail2ActionPerformed
        String ID = jLabel66.getText();
        
        ClinicalResearcherReport cr = new ClinicalResearcherReport();
        for (ClinicalResearcherReport crr : clinicalresearchdir.getClinicalReportDir()){
            if(crr.getReportID().equals(ID)){
                cr = crr;
            }
        }
        cr.setNumberOfVolunteers(Integer.valueOf(usernameTextFieldR1.getText()));
        cr.setAssignedClinicalResearcher(jComboBox5.getSelectedItem().toString());
        if (jTextArea6.getText().length() != 0){
            cr.setDrugReaction(jTextArea6.getText());
        }else{
            cr.setDrugReaction("Not provided.");
        }
        if (jTextArea7.getText().length() != 0){
            cr.setSideEffects(jTextArea7.getText());
        }
        else{
            cr.setSideEffects("Not provided.");
        }
        SplitPanelPain(cardPrevious);
        
        try {
            conForSQL.updateClinicalResearcherReport(conn, cr);
        }catch(SQLException e){
            System.out.println("Error in updating the clinical researcher.");
        }
    }//GEN-LAST:event_createTrail2ActionPerformed

    private void firstnameTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstnameTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstnameTextField1ActionPerformed

    private void usernameTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextField1ActionPerformed

    private void lastnameTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastnameTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastnameTextField1ActionPerformed


    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:  
    
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void ResearchReportPage1ResearchByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResearchReportPage1ResearchByActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResearchReportPage1ResearchByActionPerformed

    private void ageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageTextFieldActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void firstLoginOrganizationNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstLoginOrganizationNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstLoginOrganizationNameTextFieldActionPerformed

    private void firstLoginOrganizationRoleTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstLoginOrganizationRoleTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstLoginOrganizationRoleTextField1ActionPerformed

    private void ViewReport8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReport8ActionPerformed
        // TODO add your handling code here: 
           if (jTable9.getSelectedRow() != -1){
            String ID = jTable9.getValueAt(jTable9.getSelectedRow(), 0).toString();
            viewReportAll(ID);
            cardPrevious = MedicalOfficerHome;
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select a report to view.");
        }
    }//GEN-LAST:event_ViewReport8ActionPerformed

    private void ViewReport6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReport6ActionPerformed
        // TODO add your handling code here:
           if (AddSpecialistTable.getSelectedRow() != -1){
            String ID = AddSpecialistTable.getValueAt(AddSpecialistTable.getSelectedRow(), 0).toString();
            viewReportAll(ID);
            cardPrevious = MedicalOfficerHome;
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select a report to view.");
        }
    }//GEN-LAST:event_ViewReport6ActionPerformed

    private void ViewReport7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReport7ActionPerformed
        // TODO add your handling code here:
         if (jTable6.getSelectedRow() != -1){
            String ID = jTable6.getValueAt(jTable6.getSelectedRow(), 0).toString();
            viewReportAll(ID);
            cardPrevious = RegulatoryHealthManager;
        }
        else{
            JOptionPane.showMessageDialog(this, "Please select a report to view.");
        }
    }//GEN-LAST:event_ViewReport7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(drugLifeCycle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(drugLifeCycle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(drugLifeCycle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(drugLifeCycle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
 backendDBConnection db = new backendDBConnection();
    Connection conn = db.connectoDB();

    if (conn != null) {
        try {
         

            // Retrieve all employees
            EmployeeDirectory empDir = new EmployeeDirectory();
            db.retrieveEmployeeDirectory(conn, empDir);
            for (Employee e : empDir.getEmpDir()) {
                System.out.println("Name: " + e.getName());
                System.out.println("Username: " + e.getUsername());
                System.out.println("---------------------------------");
            }
        } catch (SQLException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
        /* Create and display the form */
        System.out.println("Drug Life Cycle Application Running...");
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new drugLifeCycle().setVisible(true);
            }
        });
        
     
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddAdvertising;
    private javax.swing.JPanel AddManufacturingDetails;
    private javax.swing.JButton AddReport;
    private javax.swing.JButton AddReport1;
    private javax.swing.JButton AddReport2;
    private javax.swing.JTable AddSpecialistTable;
    private javax.swing.JPanel AddToxicologyReport;
    private javax.swing.JPanel AdvertisingSpecialist;
    private javax.swing.JButton AssignToDevDecsion;
    private javax.swing.JButton AssignToDevDecsion1;
    private javax.swing.JButton AssignToDevDecsion2;
    private javax.swing.JButton AssignToDevDecsion3;
    private javax.swing.JButton AssignToDevDecsion4;
    private javax.swing.JButton AssignToDevDecsion5;
    private javax.swing.JButton CancelAssigning;
    private javax.swing.JButton CancelAssigning1;
    private javax.swing.JButton CancelAssigning3;
    private javax.swing.JButton CancelAssigning4;
    private javax.swing.JPanel ClinicalResearchers;
    private javax.swing.JPanel CreateTrail;
    private com.toedter.calendar.JDateChooser DateofBirthChooser1;
    private javax.swing.JPanel DiscoveryDevelopment;
    private javax.swing.JPanel GLPOfficersHome;
    private javax.swing.JLabel IDleadAssign;
    private javax.swing.JPanel InspectionVisit;
    private javax.swing.JPanel Login;
    private javax.swing.JPanel ManufacturingAnalystHome;
    private javax.swing.JPanel MedicalOfficerHome;
    private javax.swing.JLabel NameleadAssign;
    private javax.swing.JPanel Parent;
    private javax.swing.JPanel Registration;
    private javax.swing.JPanel RegulatoryHealthManager;
    private javax.swing.JLabel RepBy;
    private javax.swing.JLabel RepID;
    private javax.swing.JLabel RepName;
    private javax.swing.JLabel RepNotes;
    private javax.swing.JLabel RepPushToDev;
    private javax.swing.JLabel RepPushToDev2;
    private javax.swing.JLabel RepPushToDev3;
    private javax.swing.JLabel RepTarget;
    private javax.swing.JPanel ResearchLeadApproval;
    private javax.swing.JPanel ResearchLeadHome;
    private javax.swing.JButton ResearchReportCancelReport;
    private javax.swing.JButton ResearchReportCancelReport1;
    private javax.swing.JButton ResearchReportCancelReport2;
    private javax.swing.JTextField ResearchReportPage1DiseaseTarget;
    private javax.swing.JTextField ResearchReportPage1Name;
    private javax.swing.JTextField ResearchReportPage1ResearchBy;
    private javax.swing.JButton ResearchReportSubmitReport;
    private javax.swing.JPanel ResearchScientistHome;
    private javax.swing.JTabbedPane ResearchScientistReport;
    private javax.swing.JTextField ResearchScientistReportPage2ChemicalTextField;
    private javax.swing.JTextField ResearchScientistReportPage2Quantity;
    private javax.swing.JPanel ResearchScientistViewReport;
    private javax.swing.JPanel SafetyInspectorOfficer;
    private javax.swing.JButton TabbedPaneNext1;
    private javax.swing.JButton TabbedPaneNext2;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel Title1;
    private javax.swing.JLabel Title10;
    private javax.swing.JLabel Title11;
    private javax.swing.JLabel Title2;
    private javax.swing.JLabel Title3;
    private javax.swing.JLabel Title4;
    private javax.swing.JLabel Title5;
    private javax.swing.JLabel Title6;
    private javax.swing.JLabel Title7;
    private javax.swing.JLabel Title8;
    private javax.swing.JLabel Title9;
    private javax.swing.JButton ViewReport;
    private javax.swing.JButton ViewReport1;
    private javax.swing.JButton ViewReport2;
    private javax.swing.JButton ViewReport3;
    private javax.swing.JButton ViewReport4;
    private javax.swing.JButton ViewReport5;
    private javax.swing.JButton ViewReport6;
    private javax.swing.JButton ViewReport7;
    private javax.swing.JButton ViewReport8;
    private javax.swing.JPanel Workspace;
    private javax.swing.JButton addChemicalComposition;
    private javax.swing.JButton addEnterpriseButton;
    private javax.swing.JLabel addressLabelR;
    private javax.swing.JTextArea addressTextArea1;
    private javax.swing.JLabel ageLabelR;
    private javax.swing.JLabel ageLabelR1;
    private javax.swing.JLabel ageLabelR10;
    private javax.swing.JLabel ageLabelR11;
    private javax.swing.JLabel ageLabelR12;
    private javax.swing.JLabel ageLabelR13;
    private javax.swing.JLabel ageLabelR14;
    private javax.swing.JLabel ageLabelR15;
    private javax.swing.JLabel ageLabelR16;
    private javax.swing.JLabel ageLabelR17;
    private javax.swing.JLabel ageLabelR18;
    private javax.swing.JLabel ageLabelR19;
    private javax.swing.JLabel ageLabelR2;
    private javax.swing.JLabel ageLabelR20;
    private javax.swing.JLabel ageLabelR21;
    private javax.swing.JLabel ageLabelR22;
    private javax.swing.JLabel ageLabelR23;
    private javax.swing.JLabel ageLabelR24;
    private javax.swing.JLabel ageLabelR25;
    private javax.swing.JLabel ageLabelR26;
    private javax.swing.JLabel ageLabelR27;
    private javax.swing.JLabel ageLabelR28;
    private javax.swing.JLabel ageLabelR29;
    private javax.swing.JLabel ageLabelR3;
    private javax.swing.JLabel ageLabelR30;
    private javax.swing.JLabel ageLabelR4;
    private javax.swing.JLabel ageLabelR5;
    private javax.swing.JLabel ageLabelR6;
    private javax.swing.JLabel ageLabelR7;
    private javax.swing.JLabel ageLabelR8;
    private javax.swing.JLabel ageLabelR9;
    private javax.swing.JTextField ageTextField;
    private javax.swing.JButton cancel;
    private javax.swing.JButton cancelButtonR;
    private javax.swing.JButton createTrail;
    private javax.swing.JButton createTrail2;
    private javax.swing.JLabel dateleadAssign;
    private javax.swing.JButton deleteChemicalComposition;
    private javax.swing.JLabel dobLabelR;
    private javax.swing.JTextField emailIDTextField1;
    private javax.swing.JComboBox<String> enterpriseComboBoxR;
    private javax.swing.JLabel enterpriseLabelR;
    private javax.swing.JRadioButton femaleRadioButton1;
    private javax.swing.JLabel firsLognOrganzationNameLabel;
    private javax.swing.JPanel firstLoginEnterprise;
    private javax.swing.JLabel firstLoginEnterpriseName;
    private javax.swing.JTextField firstLoginEnterpriseNameTextField;
    private javax.swing.JLabel firstLoginEnterpriseTitle;
    private javax.swing.JLabel firstLoginEnterpriseTitle1;
    private javax.swing.JLabel firstLoginEnterpriseTitle2;
    private javax.swing.JLabel firstLoginEnterpriseTitle3;
    private javax.swing.JLabel firstLoginEnterpriseTitle4;
    private javax.swing.JLabel firstLoginEnterpriseType;
    private javax.swing.JComboBox<String> firstLoginEnterpriseTypeComboBox;
    private javax.swing.JPanel firstLoginOrganization;
    private javax.swing.JButton firstLoginOrganizationAddButton;
    private javax.swing.JTextField firstLoginOrganizationNameTextField;
    private javax.swing.JTextField firstLoginOrganizationRoleTextField1;
    private javax.swing.JTextField firstnameTextField1;
    private javax.swing.JLabel genderLabelR;
    private javax.swing.ButtonGroup inspectionResult;
    private javax.swing.ButtonGroup inspectionType;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList4;
    private javax.swing.JList<String> jList7;
    private javax.swing.JList<String> jList8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane29;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane33;
    private javax.swing.JScrollPane jScrollPane34;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea10;
    private javax.swing.JTextArea jTextArea11;
    private javax.swing.JTextArea jTextArea12;
    private javax.swing.JTextArea jTextArea13;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JTextArea jTextArea7;
    private javax.swing.JTextArea jTextArea8;
    private javax.swing.JTextArea jTextArea9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField lastnameTextField1;
    private javax.swing.JPanel leftComponent;
    private javax.swing.JButton loginButton;
    private javax.swing.JButton logoutButton1;
    private javax.swing.JLabel mailIDLabelR;
    private javax.swing.JRadioButton maleRadioButton1;
    private javax.swing.JTextField middlenameTextField1;
    private javax.swing.JLabel nameError;
    private javax.swing.JLabel nameLabelR;
    private javax.swing.JLabel numberLabelR;
    private javax.swing.JTextField numberTextField1;
    private javax.swing.JComboBox<String> organizationComboBoxR;
    private javax.swing.JLabel organizationLabelR;
    private javax.swing.JRadioButton othersRadioButton1;
    private javax.swing.JPanel page1;
    private javax.swing.JPanel page2;
    private javax.swing.JPanel page3;
    private javax.swing.JPasswordField passwordField1;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel passwordLabelR;
    private javax.swing.JButton registerButton;
    private javax.swing.JButton researchLeadApproval;
    private javax.swing.JPanel rightComponent;
    private javax.swing.JComboBox<String> roleComboBoxR;
    private javax.swing.JLabel roleLabelR;
    private javax.swing.JButton submitButtonR;
    private javax.swing.JLabel targetleadAssign;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel usernameLabelR;
    private javax.swing.JLabel usernameLabelR1;
    private javax.swing.JLabel usernameLabelR2;
    private javax.swing.JLabel usernameLabelR3;
    private javax.swing.JLabel usernameLabelR4;
    private javax.swing.JLabel usernameLabelR5;
    private javax.swing.JLabel usernameLabelR7;
    private javax.swing.JLabel usernameLabelR8;
    private javax.swing.JTextField usernameTextField1;
    private javax.swing.JTextField usernameTextFieldR;
    private javax.swing.JTextField usernameTextFieldR1;
    private javax.swing.JTextField usernameTextFieldR5;
    private javax.swing.JButton viewReportBackButton;
    private javax.swing.JButton viewReportResearchLead;
    private javax.swing.JLabel zipCodeLabelR;
    private javax.swing.JTextField zipcodeTextField1;
    // End of variables declaration//GEN-END:variables
}
